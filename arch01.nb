(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    802349,      15613]
NotebookOptionsPosition[    800835,      15584]
NotebookOutlinePosition[    801179,      15599]
CellTagsIndexPosition[    801136,      15596]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "\"\<Network Architecture...\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.77164032080055*^9, 3.771640333023307*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"fae7aca7-189c-4b34-b5c8-8771215b509d"],

Cell[BoxData["\<\"Network Architecture...\"\>"], "Print",
 CellChangeTimes->{
  3.7717280982513037`*^9, 3.771818391209737*^9, 3.771818435771921*^9, 
   3.7718184936800747`*^9, 3.771906349415267*^9, {3.771909892011469*^9, 
   3.771909922027383*^9}, 3.771910828826209*^9, 3.7724173502317963`*^9, {
   3.772418899891406*^9, 3.772418917587605*^9}, 3.775192569167492*^9, 
   3.775781085071451*^9, 3.775781292511558*^9, 3.775781736222934*^9, 
   3.775782168638728*^9, {3.775875434405249*^9, 3.775875447058524*^9}, 
   3.775879513076106*^9, 3.7761295437465467`*^9, 3.7761389931762247`*^9, 
   3.7761392914783783`*^9, 3.776553402583008*^9, 3.776557435905191*^9, 
   3.776561564136929*^9, {3.7765676694424543`*^9, 3.776567692709238*^9}, 
   3.777156174431919*^9, 3.7771704136642923`*^9, 3.7771705247396593`*^9, 
   3.777171726296199*^9, 3.777172809930983*^9, 3.777248644430666*^9, 
   3.77724878897157*^9, 3.7773228511010427`*^9, 3.777324292892652*^9, 
   3.7796788349278803`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"9d3e001e-3305-46d0-9d35-5bd241f70824"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConvMod", "[", 
    RowBox[{"n_", ",", "kernelsize_", ",", "padsize_", ",", "stride_"}], 
    "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"n", ",", "kernelsize", ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "stride"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "padsize"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}]}], "\[IndentingNewLine]",
      "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753580040303203*^9, 3.753580046780581*^9}, {
   3.753580314462274*^9, 3.7535803348157053`*^9}, {3.753587003279479*^9, 
   3.753587046590955*^9}, {3.77181835522797*^9, 3.7718183707210817`*^9}, 
   3.771818491500177*^9, {3.7757812760492268`*^9, 3.775781278256605*^9}, {
   3.77578172321915*^9, 3.775781725329199*^9}, {3.7765613507080297`*^9, 
   3.7765613713643703`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"3907ebcd-c760-4b15-870d-8cc5d4eb2f87"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EncMod", "[", 
    RowBox[{"n_", ",", "kernelsize_", ",", "padsize_", ",", "stride_"}], 
    "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvMod", "[", 
       RowBox[{"n", ",", "kernelsize", ",", "padsize", ",", "stride"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"\"\<Function\>\"", "\[Rule]", "Max"}], ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753580050460917*^9, 3.753580061917292*^9}, {
   3.753580157918941*^9, 3.753580185325158*^9}, {3.753580420336257*^9, 
   3.753580443999198*^9}, {3.7535870496309223`*^9, 3.7535870569254913`*^9}, {
   3.771818360316956*^9, 3.77181837630099*^9}, 3.77241724635229*^9, {
   3.775779908242895*^9, 3.775779927413275*^9}, {3.776139037487447*^9, 
   3.776139039660475*^9}, 3.776561353622423*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"ae471433-d010-4b89-bf2f-be445a1a8f96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DecMod", "[", "n_", "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}]}], 
     RowBox[{"(*", ",", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"ConvMod", "[", 
       RowBox[{"n", ",", "kernelsize", ",", "padsize", ",", "stride"}], "]"}],
       "*)"}], "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753580067709486*^9, 3.753580079484797*^9}, {
   3.753580350272546*^9, 3.753580351759672*^9}, {3.753580529648486*^9, 
   3.753580554003401*^9}, {3.75358706501236*^9, 3.753587087788858*^9}, {
   3.77181838060546*^9, 3.771818387211122*^9}, 3.772417246553979*^9, {
   3.775781285025634*^9, 3.7757812869168243`*^9}, {3.77578173081979*^9, 
   3.775781732817852*^9}, {3.776561357028552*^9, 3.776561360564517*^9}, {
   3.777163508022403*^9, 3.7771635113215303`*^9}, {3.7771638198036757`*^9, 
   3.777163824841774*^9}, {3.777169405755288*^9, 3.777169407752646*^9}, 
   3.7771704948693037`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"304c9253-0741-41e3-a604-db767177dedb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapMod", "[", 
    RowBox[{"n_", ",", "kernelsize_", ",", "padsize_", ",", "stride_"}], 
    "]"}], ":=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"n", ",", "kernelsize", ",", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "stride"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "padsize"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "LogisticSigmoid"}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7535777552210693`*^9, 3.753577848539216*^9}, 
   3.753579640344192*^9, {3.753580807570119*^9, 3.753580813169504*^9}, {
   3.7535824990249443`*^9, 3.753582501460184*^9}, {3.75358712390329*^9, 
   3.753587129631275*^9}, {3.753587230837791*^9, 3.7535872339331408`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"58cf3314-f808-40cc-97e3-6543dcfb2af0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", " ", "Network"}]}]}]}]}]}]}]}]}]}]}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Parameters", " ", "--"}], "--"}], "--"}]}], "-", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", 
                  RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.749160460330285*^9, 3.749160463981484*^9}, {
  3.7537540070737457`*^9, 3.753754030573264*^9}, {3.753754070646834*^9, 
  3.7537541035498943`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"dd62b4e1-f218-47fa-96a9-40df10966e96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ks0", "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ";", " ", 
   RowBox[{"ps0", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";", 
   RowBox[{"st0", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"KernelSize", ",", " ", "PadSize", ",", " ", "Stride"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7535810912536716`*^9, 3.753581168405683*^9}, {
   3.753585777960185*^9, 3.753585785771196*^9}, {3.753586075809906*^9, 
   3.753586082238895*^9}, {3.7535863674692163`*^9, 3.753586384381165*^9}, {
   3.7535866467355633`*^9, 3.7535866524194803`*^9}, {3.7615989726471786`*^9, 
   3.761598992026504*^9}, {3.771564794289276*^9, 3.771564801257637*^9}, 
   3.771564833319508*^9, {3.77163471075939*^9, 3.771634722988789*^9}, {
   3.776561448849119*^9, 3.7765614567654*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"598362fb-2818-48e5-9a08-a8e149030eef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ks1", "=", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}]}], ";", " ", 
   RowBox[{"ps1", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ";", 
   RowBox[{"st1", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.753581179413047*^9, 3.753581197318062*^9}, {
  3.75358125247964*^9, 3.753581256469619*^9}, {3.753585482280881*^9, 
  3.7535854838803787`*^9}, {3.753585531738677*^9, 3.7535855395566893`*^9}, {
  3.753585787113357*^9, 3.753585793782555*^9}, {3.753586085130797*^9, 
  3.753586093052541*^9}, {3.753586371743794*^9, 3.7535863792743073`*^9}, {
  3.76159897629526*^9, 3.761598994917254*^9}, {3.7715648119044743`*^9, 
  3.771564833330544*^9}, {3.7716347110220757`*^9, 3.771634723217803*^9}, {
  3.776561463499928*^9, 3.776561470494527*^9}, {3.779747488995281*^9, 
  3.779747496453609*^9}, {3.779755400114155*^9, 3.779755406916181*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"33ac2309-75a9-4ac8-abc2-471d02bf7775"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", " ", "Construct"}]}]}]}]}]}]}]}]}]}]}], " ", 
    "SCondNet", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N", "=", "!"}], ")"}], " ", "--"}], "--"}], "--"}]}], "-", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", 
                  RowBox[{"--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.749160460330285*^9, 3.749160463981484*^9}, {
   3.7537540070737457`*^9, 3.753754030573264*^9}, 3.753754070646834*^9, {
   3.753754119021077*^9, 3.753754132168973*^9}, {3.761531427454481*^9, 
   3.7615314298367434`*^9}, {3.771638907334712*^9, 3.771638911892109*^9}, {
   3.792458982568747*^9, 
   3.792458987704372*^9}},ExpressionUUID->"d61806f1-1461-48cf-9828-\
affeff2ed9d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CondNET", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Enc_01a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"4", ",", "ks0", ",", "ps0", ",", "st0"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_02a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"8", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_03a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"16", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_04a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"32", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_05a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"64", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_06a\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"128", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_06a\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "64", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_01b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"4", ",", "ks0", ",", "ps0", ",", "st0"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_02b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"8", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_03b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"16", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_04b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"32", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_05b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"64", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_06b\>\"", "\[Rule]", 
       RowBox[{"EncMod", "[", 
        RowBox[{"128", ",", "ks0", ",", " ", "ps0", ",", "st0"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_06b\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "64", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_1x\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "4", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_2x\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "8", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_3x\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "16", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_4x\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "32", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_5x\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "64", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_1x\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"8", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_2x\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"16", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_3x\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"32", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_4x\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"64", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_5x\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"128", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1x\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2x\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3x\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4x\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map0x\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"1", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map1x\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"4", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map2x\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"8", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map3x\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"16", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map4x\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"32", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_1y\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "4", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_2y\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "8", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_3y\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "16", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_4y\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "32", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_5y\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "64", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_1y\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"8", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_2y\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"16", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_3y\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"32", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_4y\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"64", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_5y\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"128", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1y\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2y\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3y\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4y\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map0y\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"1", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map1y\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"4", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map2y\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"8", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map3y\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"16", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map4y\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"32", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_1z\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "4", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_2z\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "8", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_3z\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "16", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_4z\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "32", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Dec_5z\>\"", "\[Rule]", 
       RowBox[{"DecMod", "[", "64", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_1z\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"8", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_2z\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"16", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_3z\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"32", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_4z\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"64", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"\"\<Conv_5z\>\"", "\[Rule]", 
       RowBox[{"ConvMod", "[", 
        RowBox[{"128", ",", "ks1", ",", " ", "ps1", ",", "st1"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1z\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2z\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3z\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4z\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map0z\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"1", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map1z\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"4", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map2z\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"8", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map3z\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"16", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Map4z\>\"", "\[Rule]", 
       RowBox[{"MapMod", "[", 
        RowBox[{"32", ",", "ks1", ",", "ps1", ",", "st1"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "|>"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input1\>\"", "]"}], "\[Rule]", 
        RowBox[{"\"\<Enc_01a\>\"", "\[Rule]", 
         RowBox[{"\"\<Enc_02a\>\"", "\[Rule]", 
          RowBox[{"\"\<Enc_03a\>\"", "\[Rule]", 
           RowBox[{"\"\<Enc_04a\>\"", "\[Rule]", 
            RowBox[{
            "\"\<Enc_05a\>\"", "\[Rule]", "\"\<Enc_06a\>\""}]}]}]}]}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input2\>\"", "]"}], "\[Rule]", 
        RowBox[{"\"\<Enc_01b\>\"", "\[Rule]", 
         RowBox[{"\"\<Enc_02b\>\"", "\[Rule]", 
          RowBox[{"\"\<Enc_03b\>\"", "\[Rule]", 
           RowBox[{"\"\<Enc_04b\>\"", "\[Rule]", 
            RowBox[{
            "\"\<Enc_05b\>\"", "\[Rule]", "\"\<Enc_06b\>\""}]}]}]}]}]}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_06a\>\"", "\[Rule]", "\"\<Dec_06a\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Enc_06b\>\"", "\[Rule]", "\"\<Dec_06b\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Dec_06a\>\"", ",", "\"\<Dec_06b\>\""}], "}"}], 
       "\[Rule]", "\"\<H\>\""}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<Conv_5x\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_5x\>\"", "\[Rule]", "\"\<Map4x\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_04a\>\"", ",", "\"\<Map4x\>\"", ",", "\"\<Enc_04b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_4x\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4x\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_4x\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_4x\>\"", "\[Rule]", "\"\<Map3x\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_03a\>\"", ",", "\"\<Map3x\>\"", ",", "\"\<Enc_03b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_3x\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3x\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_3x\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_3x\>\"", "\[Rule]", "\"\<Map2x\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_02a\>\"", ",", "\"\<Map2x\>\"", ",", "\"\<Enc_02b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_2x\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2x\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_2x\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_2x\>\"", "\[Rule]", "\"\<Map1x\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_01a\>\"", ",", "\"\<Map1x\>\"", ",", "\"\<Enc_01b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_1x\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1x\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_1x\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_1x\>\"", "\[Rule]", 
         RowBox[{"\"\<Map0x\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<Output1\>\"", "]"}]}]}]}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<Conv_5y\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_5y\>\"", "\[Rule]", "\"\<Map4y\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_04a\>\"", ",", "\"\<Map4y\>\"", ",", "\"\<Enc_04b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_4y\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4y\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_4y\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_4y\>\"", "\[Rule]", "\"\<Map3y\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_03a\>\"", ",", "\"\<Map3y\>\"", ",", "\"\<Enc_03b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_3y\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3y\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_3y\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_3y\>\"", "\[Rule]", "\"\<Map2y\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_02a\>\"", ",", "\"\<Map2y\>\"", ",", "\"\<Enc_02b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_2y\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2y\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_2y\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_2y\>\"", "\[Rule]", "\"\<Map1y\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_01a\>\"", ",", "\"\<Map1y\>\"", ",", "\"\<Enc_01b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_1y\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1y\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_1y\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_1y\>\"", "\[Rule]", 
         RowBox[{"\"\<Map0y\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<Output2\>\"", "]"}]}]}]}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<Conv_5z\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_5z\>\"", "\[Rule]", "\"\<Map4z\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_04a\>\"", ",", "\"\<Map4z\>\"", ",", "\"\<Enc_04b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_4z\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_4z\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_4z\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_4z\>\"", "\[Rule]", "\"\<Map3z\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_03a\>\"", ",", "\"\<Map3z\>\"", ",", "\"\<Enc_03b\>\""}], 
        "}"}], "\[Rule]", " ", "\"\<H_3z\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_3z\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_3z\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_3z\>\"", "\[Rule]", "\"\<Map2z\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_02a\>\"", ",", "\"\<Map2z\>\"", ",", "\"\<Enc_02b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_2z\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_2z\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_2z\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_2z\>\"", "\[Rule]", "\"\<Map1z\>\""}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Enc_01a\>\"", ",", "\"\<Map1z\>\"", ",", "\"\<Enc_01b\>\""}], 
        "}"}], "\[Rule]", "\"\<H_1z\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<H_1z\>\"", "\[Rule]", 
       RowBox[{"\"\<Conv_1z\>\"", "\[Rule]", 
        RowBox[{"\"\<Dec_1z\>\"", "\[Rule]", 
         RowBox[{"\"\<Map0z\>\"", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<Output3\>\"", "]"}]}]}]}]}]}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input1\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"256", ",", "256"}], "}"}], ",", 
        RowBox[{"ColorSpace", "\[Rule]", "\"\<Grayscale\>\""}]}], "}"}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input2\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"256", ",", "256"}], "}"}], ",", 
        RowBox[{"ColorSpace", "\[Rule]", "\"\<Grayscale\>\""}]}], "}"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.752965631512206*^9, 3.752965686448625*^9}, 
   3.752965733801126*^9, {3.752967163942707*^9, 3.752967496303589*^9}, 
   3.7529687870116873`*^9, {3.752969497110306*^9, 3.7529696365860653`*^9}, {
   3.752969715830831*^9, 3.7529697920622807`*^9}, {3.752969831381259*^9, 
   3.7529699748951197`*^9}, {3.752970048543421*^9, 3.752970116600079*^9}, {
   3.752970192707192*^9, 3.752970202825555*^9}, {3.752970235973957*^9, 
   3.752970279365521*^9}, {3.7529704310073557`*^9, 3.7529705782908487`*^9}, 
   3.752970695274082*^9, {3.752971414499645*^9, 3.7529714366063347`*^9}, {
   3.752971753184265*^9, 3.752971816960363*^9}, {3.752971873792968*^9, 
   3.752972117155735*^9}, {3.7529722882019453`*^9, 3.7529722915241528`*^9}, 
   3.7529777688591137`*^9, {3.752977804333798*^9, 3.752977864615123*^9}, {
   3.7534026918044233`*^9, 3.753402716218102*^9}, {3.75340375044769*^9, 
   3.753403762116199*^9}, 3.753420091911006*^9, 3.753422079080553*^9, 
   3.753423114219288*^9, 3.753424555688628*^9, {3.753477337047659*^9, 
   3.7534773972664967`*^9}, {3.7534907443658943`*^9, 3.753490843665807*^9}, {
   3.753490875466997*^9, 3.753490916884796*^9}, {3.753491024615223*^9, 
   3.753491151255979*^9}, {3.7534920100985813`*^9, 3.753492023684156*^9}, {
   3.753492074872341*^9, 3.7534920977790318`*^9}, {3.753492153427835*^9, 
   3.753492170434527*^9}, {3.7534932507063417`*^9, 3.753493252512994*^9}, {
   3.753493288503734*^9, 3.753493300704502*^9}, {3.753493339969514*^9, 
   3.7534933561364937`*^9}, {3.753493386867414*^9, 3.7534933904973383`*^9}, {
   3.753493420934334*^9, 3.753493478114835*^9}, {3.753493514612563*^9, 
   3.753493550352593*^9}, {3.753493589317367*^9, 3.753493678183276*^9}, {
   3.753493727730343*^9, 3.7534939596522207`*^9}, {3.7534940071450853`*^9, 
   3.753494235047925*^9}, {3.753494298619038*^9, 3.753494301176635*^9}, {
   3.7534943480098467`*^9, 3.7534943729408092`*^9}, {3.753494421958926*^9, 
   3.753494496023178*^9}, {3.753494664637834*^9, 3.75349473642496*^9}, {
   3.7534947672502403`*^9, 3.753494914764639*^9}, {3.7534960821341753`*^9, 
   3.753496164260139*^9}, {3.753496303228776*^9, 3.753496332928895*^9}, {
   3.753496382793055*^9, 3.753496388337462*^9}, {3.753498217770155*^9, 
   3.753498218419199*^9}, {3.7534993075451508`*^9, 3.753499561416245*^9}, {
   3.753499640734918*^9, 3.7534996607133417`*^9}, {3.753499718323194*^9, 
   3.753499754444686*^9}, {3.753499792552457*^9, 3.753499909537917*^9}, {
   3.753499942622488*^9, 3.7535002608630533`*^9}, {3.753500329439199*^9, 
   3.753500504262227*^9}, {3.753503103870267*^9, 3.753503168938983*^9}, {
   3.753503596979044*^9, 3.75350362801689*^9}, {3.7535037477576942`*^9, 
   3.753503840644355*^9}, {3.753503942359078*^9, 3.7535039636371098`*^9}, {
   3.753504170151335*^9, 3.7535041705479393`*^9}, {3.753504226863896*^9, 
   3.7535042711904373`*^9}, {3.7535043180619287`*^9, 3.75350436902882*^9}, {
   3.7535065547268047`*^9, 3.753506671206478*^9}, {3.753508979477723*^9, 
   3.753509078034194*^9}, {3.753510799647649*^9, 3.7535108122577457`*^9}, {
   3.753577472311104*^9, 3.7535777006439123`*^9}, {3.753577866230509*^9, 
   3.7535779352030773`*^9}, {3.7535791702900667`*^9, 3.753579281524117*^9}, {
   3.7535797208137083`*^9, 3.753579973335658*^9}, {3.7535800098236847`*^9, 
   3.753580020598723*^9}, 3.753580107419449*^9, {3.753580365994329*^9, 
   3.7535803886677227`*^9}, {3.753580455972348*^9, 3.753580482311139*^9}, {
   3.753580571200837*^9, 3.753580623694796*^9}, {3.753580690754146*^9, 
   3.753580766973837*^9}, {3.753580852287634*^9, 3.753580857591023*^9}, {
   3.753581048273589*^9, 3.7535810517769127`*^9}, {3.753581213443829*^9, 
   3.753581237572547*^9}, {3.753581304740027*^9, 3.75358138263947*^9}, {
   3.753582458712689*^9, 3.753582471046754*^9}, {3.753587152200103*^9, 
   3.7535871883442593`*^9}, 3.7535872423449574`*^9, {3.753587440204186*^9, 
   3.7535875568755283`*^9}, {3.753587779464066*^9, 3.7535880476911287`*^9}, {
   3.753655759181801*^9, 3.753655761096904*^9}, {3.753656320033122*^9, 
   3.753656333502796*^9}, {3.7561603909257402`*^9, 3.756160392316486*^9}, {
   3.76085809638857*^9, 3.760858108044828*^9}, {3.760858149624948*^9, 
   3.76085815495627*^9}, 3.7608581854335823`*^9, 3.761528577010961*^9, {
   3.761531449122591*^9, 3.761531450052964*^9}, {3.7616034332712717`*^9, 
   3.761603511748217*^9}, 3.761603570774372*^9, 3.761603687160385*^9, {
   3.7616037729970713`*^9, 3.761603827166007*^9}, {3.761604092814932*^9, 
   3.761604093419375*^9}, {3.761612924209436*^9, 3.761612974666965*^9}, {
   3.76161563432148*^9, 3.761615721207057*^9}, {3.761616040951974*^9, 
   3.7616162646991043`*^9}, {3.7616162951369953`*^9, 3.761616316588764*^9}, {
   3.761616456942802*^9, 3.7616164963811083`*^9}, 3.761616726574231*^9, {
   3.761616756709351*^9, 3.7616168025086193`*^9}, 3.761616840826211*^9, 
   3.761616894804798*^9, {3.761616939857913*^9, 3.761617107323718*^9}, 
   3.761617163931589*^9, {3.761617215926627*^9, 3.7616172923438473`*^9}, {
   3.761617386156852*^9, 3.7616174304692698`*^9}, {3.7616174648358097`*^9, 
   3.7616176388709183`*^9}, {3.7616176712499228`*^9, 3.761617818549512*^9}, {
   3.76161786644038*^9, 3.761618116216465*^9}, {3.7616181553267736`*^9, 
   3.761618257995531*^9}, {3.761618299260661*^9, 3.761618473947584*^9}, {
   3.761618560929768*^9, 3.761618598608325*^9}, {3.761618666848578*^9, 
   3.761618786110641*^9}, {3.761618828158814*^9, 3.7616189702711983`*^9}, {
   3.761619039142868*^9, 3.761619125477453*^9}, {3.7715403208023376`*^9, 
   3.7715403367844677`*^9}, {3.771540373888908*^9, 3.7715406993098507`*^9}, {
   3.7715407447225857`*^9, 3.7715407527837467`*^9}, {3.7715501951417427`*^9, 
   3.771550281615045*^9}, {3.771550488257584*^9, 3.771550560035562*^9}, {
   3.77155059360264*^9, 3.771550659445922*^9}, {3.77155070524496*^9, 
   3.771550729198905*^9}, {3.771550786182364*^9, 3.7715508246395063`*^9}, {
   3.771550860967915*^9, 3.771550972943903*^9}, {3.771551010984654*^9, 
   3.771551236918583*^9}, {3.771551301095439*^9, 3.7715513527398443`*^9}, {
   3.77163403305868*^9, 3.771634033068963*^9}, {3.771638678373412*^9, 
   3.771638678968897*^9}, {3.7716389185870523`*^9, 3.7716389371348343`*^9}, {
   3.771643540014184*^9, 3.7716435438559923`*^9}, {3.771643620446966*^9, 
   3.771643623037546*^9}, 3.771643658543592*^9, {3.771643691083378*^9, 
   3.771643693883151*^9}, {3.7716437506833878`*^9, 3.771643824109981*^9}, {
   3.7716438548267612`*^9, 3.771643947586707*^9}, {3.7717280506722403`*^9, 
   3.7717281065525227`*^9}, {3.771818421790551*^9, 3.77181843118465*^9}, {
   3.7719061966680603`*^9, 3.771906342013996*^9}, {3.7719098264553967`*^9, 
   3.771909883237426*^9}, {3.7719099183585997`*^9, 3.7719099298828897`*^9}, {
   3.772417143176262*^9, 3.772417347087978*^9}, {3.77241879531548*^9, 
   3.772418802524478*^9}, {3.772418841295549*^9, 3.7724188595124826`*^9}, 
   3.7724189097132797`*^9, {3.775191892690789*^9, 3.7751919219258337`*^9}, {
   3.775191965026318*^9, 3.77519197764981*^9}, {3.775192029396562*^9, 
   3.775192530293202*^9}, {3.77519256419764*^9, 3.775192566052494*^9}, {
   3.775192602393565*^9, 3.7751926392674713`*^9}, {3.775192781114271*^9, 
   3.775192791559249*^9}, {3.775192841113984*^9, 3.775192873303443*^9}, {
   3.77519290383358*^9, 3.7751931349378138`*^9}, {3.7751932095204144`*^9, 
   3.775193429712757*^9}, {3.775193527551173*^9, 3.775193675681931*^9}, {
   3.775780437839755*^9, 3.7757805077091713`*^9}, {3.775781482745521*^9, 
   3.7757815743010693`*^9}, {3.775781625623307*^9, 3.77578169746383*^9}, {
   3.775781752494869*^9, 3.7757817548553257`*^9}, {3.775781945837494*^9, 
   3.775781965466967*^9}, {3.77578216183454*^9, 3.775782164601694*^9}, {
   3.775784091344614*^9, 3.775784130372088*^9}, {3.77587705078907*^9, 
   3.7758772920060663`*^9}, {3.775877358409255*^9, 3.775877366424718*^9}, {
   3.775879436640679*^9, 3.775879517558077*^9}, {3.775879590540859*^9, 
   3.775879794682218*^9}, {3.775880062853557*^9, 3.775880120270129*^9}, {
   3.776129565300411*^9, 3.776129789079708*^9}, {3.7761299985433083`*^9, 
   3.7761300183686438`*^9}, {3.776130064149085*^9, 3.776130064496725*^9}, {
   3.776130115986113*^9, 3.776130172064878*^9}, {3.776130221179832*^9, 
   3.776130484950337*^9}, {3.776130551270383*^9, 3.776130562757312*^9}, {
   3.776130616039812*^9, 3.7761307874817057`*^9}, {3.776130837099291*^9, 
   3.776130901628148*^9}, {3.7761309344247637`*^9, 3.7761310498343277`*^9}, {
   3.776131103803974*^9, 3.77613111038416*^9}, {3.776131142430141*^9, 
   3.7761312542685947`*^9}, {3.776131336163287*^9, 3.77613135845076*^9}, {
   3.776139168969105*^9, 3.776139261221004*^9}, {3.776551619337673*^9, 
   3.776551756460778*^9}, {3.776551925532552*^9, 3.7765519303302937`*^9}, {
   3.7765520767169657`*^9, 3.776552269344356*^9}, {3.7765524085633707`*^9, 
   3.7765525015371304`*^9}, {3.776552746964015*^9, 3.776552755677065*^9}, {
   3.776552794098963*^9, 3.776553016392309*^9}, {3.77655306898457*^9, 
   3.776553124457279*^9}, {3.77655318652386*^9, 3.776553274267014*^9}, {
   3.776553324082459*^9, 3.776553347503051*^9}, {3.776553457709373*^9, 
   3.776553475286564*^9}, {3.7765535199345083`*^9, 3.7765535736240053`*^9}, {
   3.7765536635060797`*^9, 3.776553713925765*^9}, {3.776554286704938*^9, 
   3.776554352742177*^9}, 3.776556777642164*^9, {3.776557100340222*^9, 
   3.776557185504429*^9}, {3.7765572746951513`*^9, 3.7765572873824863`*^9}, {
   3.7765573537384872`*^9, 3.776557355042486*^9}, {3.776557407166915*^9, 
   3.7765574162945433`*^9}, {3.776558995441896*^9, 3.776559015952705*^9}, {
   3.776559173041277*^9, 3.7765591873429613`*^9}, {3.776559236434664*^9, 
   3.776559247073889*^9}, {3.7765592779253273`*^9, 3.77655928840145*^9}, {
   3.776560846053835*^9, 3.7765609001520967`*^9}, {3.776561026242433*^9, 
   3.776561053192326*^9}, {3.7765613138171577`*^9, 3.776561333441094*^9}, {
   3.776561495645975*^9, 3.77656155940934*^9}, {3.7765625612446547`*^9, 
   3.776562768690186*^9}, {3.776562836516283*^9, 3.776562966261159*^9}, 
   3.77656303554805*^9, {3.776567686097427*^9, 3.776567689725628*^9}, {
   3.776569558431861*^9, 3.776569563796171*^9}, 3.776569604000154*^9, {
   3.776633624837153*^9, 3.776633632756671*^9}, {3.776634854510726*^9, 
   3.776635005503161*^9}, {3.776635075122786*^9, 3.77663508323708*^9}, 
   3.776635985126326*^9, {3.776636054245099*^9, 3.776636129473002*^9}, {
   3.777154396586816*^9, 3.777154397160904*^9}, 3.777156170579094*^9, {
   3.7771635375491543`*^9, 3.777163608459447*^9}, 3.777163671772998*^9, {
   3.777163843116497*^9, 3.7771639115963697`*^9}, {3.777170504939466*^9, 
   3.777170517128577*^9}, {3.777170591147683*^9, 3.777170605256958*^9}, {
   3.777170640507036*^9, 3.777170652712637*^9}, {3.7771713335775137`*^9, 
   3.777171359180162*^9}, {3.7771714638638077`*^9, 3.777171466298655*^9}, {
   3.777171714572596*^9, 3.777171742513152*^9}, {3.7771717989761343`*^9, 
   3.777171851663904*^9}, {3.7771718931744347`*^9, 3.777171895589114*^9}, {
   3.777171941359518*^9, 3.777171968742243*^9}, {3.777248777547318*^9, 
   3.777248783175497*^9}, {3.7773227979080877`*^9, 3.77732283362048*^9}, {
   3.777322864659774*^9, 3.777322928003922*^9}, {3.77732326415746*^9, 
   3.777323343928722*^9}, {3.779678664395067*^9, 3.7796787309747334`*^9}, {
   3.7796787647325783`*^9, 3.779678830074181*^9}, {3.779682119471406*^9, 
   3.7796821197800713`*^9}, {3.7924589745921087`*^9, 
   3.792458975014325*^9}},ExpressionUUID->"1fdca5cd-47bc-47f4-88be-\
64fe5c436b6b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["72", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = 43}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-28., 1.7145055188062944`*^-15}, {-27., 
                    3.703514066099527*^-11}}], 
                    
                    LineBox[{{-27., 3.703514066099527*^-11}, {-26., 
                    0.5083536924467482}}], 
                    LineBox[CompressedData["
1:eJxN1Hk0VP0fB3D7EsVYGmvZsi9jnxlxr6dJyZMlpaJFslT0SCr5PRUpS8kW
KlQqJUtK6iHPI99PKYlISrIbM4SyL6OEn4Y/7ufMPXPe597vOa/z/txzVb0C
t/jw8fDwNC9cv/8Xxwp8vkOi1a5X1gPy/52cHafDtO8nqebJW2ilDr9TSS8d
lC9oVexueYwiDb5EGHyhQ8BGiQLXVWXIWIsu41lFh3+eJar7ZVUgFe4BOojx
ParqzX2LnH/edfp5lw6K+KjXVlI9go8FP/Yl0eFmWmrc56iPKPjOOt6oU3S4
GMdgh5o3IV/u0IGlOOdro9yKpC06JR470cFNGzt3e00nmtIKYUvT6ODg8Ier
ZAYTSaw1ZMer0cHF1K9v930W2nlUQEJNnA70P1ecLS3pQU3VP7xrJ2kgdsVS
Wf3dV3Rp/YrexE4agCSrLJ3dj4K7bS8HvKXBrjJJTxXe7yjxdspBzyc0aLsG
Qk9Vh9DmSKvYKGca1NxmphX0j6OgHwG+u2xokGDD8pIrn0D0HfO/7uvRQOB2
Y15k6CTKvj3meFCOBlpvnwVNKk6hp412u24J0IBTfKnE794UOjAxo7F5hAon
DrmcapPlIDRLyg1spcJdlhC4Huagf0dj+oQrqXBWrSCiNp+DdtR7smQLqSCu
xXhl/4Gz1A8VHri9O1/VzkE/ftfrRAU8YjEnsKjxLCoVWvIWs7ra76HC/+oX
c7Gn2MKPCsrji9khc8I+c8ISqqRqubmj/fdYQqjRYj6q9CZI6Y0lGNkvZiGP
QkGPQksY2LuYFz2WUHl9MXPX7WQJKu8WczzXYwk55nXczOWoWYJHcx3BYwn0
kvfcvInrsQC79/UEjwWcUW0geCyAWfCR4LGAo8caCZ6F89Q2Qj8WsMyig5vj
uB4L+Ge8k9CPBfwRxCR4LKDoYTfBYw7CD1gEjznYHmQTPOawp5dN8JiDp3oP
wWMOhh8W709zPeZQVMgmeMwhOZVN6MccasPYBI85eAWyCfsyA2dvNsFjBul7
iB4zsN5D9JjB2v1sgscMui6yCfsyg7hkNmFfZhC/lBf7MQPm0vMlXI8ZRIQu
ZnuuxxRC9xI9plC+lugxBTcS0WMKeDuL4DGFmeUsgscUPCu7CR5TqAvqJngW
zkt2E/oxhZLbTMK+TMBMk0nwmEDJjS6CxwRwkS6CxwTqfDoJHhOQUW4nvD8m
oN7cRvCYgGZoO8FjAoqzHQSPCfD6ED3G0FxI7McYsrr6CB5j2DsxSPAYw4rv
4wSPMWy0EIv8nSE+LuihkzGUum92GfzCQfcvUvxFacbQpi9Y7FHNQQruTq4h
asbw8IHJE+kiDlKc7deZFjMGSkvjRtlEDsoO5hmOnaTA/n+GTnh6L3x/nl++
Y9JJATub09aThhzk03qL8b2KAl+Onb3+cXgKXX2n2/isiAKKO2eSZ7KnljwU
2Oj41Wf69CQqsjjmed+JApHXKm3d1SdRoG6N5iCVAuP6dZevvplA1239Sy3V
KBAvNrej8NDC9/LUVrloMQpsM3NLuSs+geKfLo8u7jcCh/ufGccKxtHFEoET
B8qM4C/vsEOrN48jP974WfUEIwB/Z8Hsb2NI83Kucv8+I7B5bi8rcmEM1b77
PYbQjZ3XPWkzioJEUyJcMg1BMPu5b9qXEST5mrG1J8gQPnVMrNUMGkH35zts
YxiG4DSgU7BKZASZl3o50MmG8DWx9C9Bq2EEo++PzPQbQOyYQsldryG0Llez
qKbMAKJ+hJgqRg8i1OkrkZ9gAE336lkHcr4j89TEmDQvAzjL0aiKq/y25NEH
fVVqhktVH3pB+tm7JVMfvu+0rdjT/hW59rb1DATpg/cj+5U6w70obNPxtykM
fUhQdUkpnO1BDJuKJGeyPhwp3G49KdKDsl9U2qwa0AOBXbtJHEk2uvMprH62
TA+cNbwki2VZiB4yZDecoAdOor50E3I3OpwrdWfMSw8ExQ4m+Msylzy6MDrY
lS7h0opo1mEJjpm6IDmtFtZIb0YGKaPRzUG64Dzf9O8l1Sb04IN68WGGLhTx
8ziaCzaiR5OyCmJkXTAVzKC+72lAa3mqnjzu14HP/Ln/c6+oR1tHaef2lemA
2byr9kOrWjRW5R+jkKADcyNWyy4OVCH56N0Vbft0QKxdNGNj8ivE5bzTBsN+
3bvLMnKQvVDdc/dMbRAcnb203S4WBT/Tt112VBuK09/Nro+/gm1k9bm1MrQh
L9iOT+VRAVYZxTdfS9aGbX8fSaaYPsPG7oTSuge04NpxgwxaK2BVlo5CcuVa
UMgYncgvfI1tWh/uE5ikBVN5/NuH06qxkBqJ7X3eWuCb4/2C/+p7bLEfTRD/
teNpTPQXbLT86oJHE9zWnRtP1W3FVmS44suOLuT6wlGNz+2Yxj6eba0MTYj8
cKRJYX0XZky6OVNL1oTi9ouy3llMjJavb9Y9sAYqLmmaDgmyMKrRgzly+RrI
7VhHKQ1gY5QbSh6BSWvgwMdu8ddNPZjq5Gn7Pu81wOvP/5a04euSRwMapvNv
xtl9x0QUw3P2ZGpA1EmZqNCqQSxAbPKb/FENwK/k35pxHMY4N/SuzjE0YC6H
yhE9PILlNqjnictpQEtjkSXTbBSLyG3XYHxTh2KXV0n886PYebWdwvfK1SFV
6bBgUM0YVmB9xcXosjoEWxRc1kkfx+Z+pvCzfNTBNfM8zcB/Alvclxr08R9q
ZTlwMINpk0CPTDX42BCxlq49jfGFg9Dyo2rg4ieZtUnoB7bJ+3gyk6EGni+k
JGR7f2D891xkm8lqwMe8EJ725idG+WPbpfEBVbCoPM5pypvB6q3CpynlqvDr
yOfg+oRfWHdSw86kJFXYysyfjDgxix1g/Fko46MKNuSpU8N75pb6UYH4Uo7f
2EsePBEpdTlkqsDV0PHkl1a8eNwNv+q6IBXwq9lUnfuUF3/pWxC7jaECvx7O
Lssx4MONFIfUu1aqwFYNcbfn2Xx4znFXzfaG1RCsdyK/fzU/vj8WinhPrga3
V1ZiBmn8eHyI+qCB8mqYG9p1PFpKANejn2rc93IV+Oc390/HCuCjB+zFwlOV
QT3xa/jsKiF88nX3bTcrZZDdUuISf1UIj2XYOkozlaA7QyekXkIYL2R7SxZH
KUH0YZvRimhh3Dt7c5+NvhLwv5lEB+aF8QcXZhoLPijCzhwnVvkJETwi/q9m
vhBFiCH96VE5KIL3Pc0es1ZShAS+b1ph3qJ4168s1b0vFODI3/r2/S2ieHra
75GHdLcY4UPuYviTMvmpKzby4EQ6GeNXL4Z7GjsHpLPkQOtZW3WInTiexVn7
KytGDlQdiuvSy8TxkxJd954YyAG9WiCl3mQ53nWSdvBtAxlOmFcpyOcuxztM
7e16Qsjw6RLP/mOrV+CBuIS1sDIZttQXBHSnrsBTb8ZuNnq5Esbm31vuF5dY
8sjCv0YenPYNkvjfmb6iyray0HZW8UtYpCQeUXautGhQBpyOMxvD30jiD0ZG
ct0zZUB6WcFI13IS/tPqYYuMmwxo4me0b+0g4QE3/3NgkmQglrztdPl9Es4n
Jz+LGqQBTzQetpoh4c9zKocKr0nD+jzpM3KuUvh151cqT/dLQ4bPjM7WR1J4
poRU8ltTabB92Tc2JCGNl7pPCFAKpcCuRbXmkKEMPvZ1DC+xkIJtCo7OLRay
+OaS5Rv2viFBYMThCGudlfjrKgZZ24sEiVLh+1IEyfgepWuPScIk+K86crCj
hoyTi4RXKhVLwlDeGU3lU3L48IVkxoZASdB9ckjcaaU83pdlZZ1sIglBLPvM
Y+ny+Dx3JACslDrjRBTw/wNaWDW6
                    "]], 
                    LineBox[CompressedData["
1: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
Ic/7vTLlcH+9Amr58/bs397zEvrL+/kPvcxC6Q==
                    "]], 
                    LineBox[CompressedData["
1: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
Ia5UvvnQpJmc/wElNuSv
                    "]], 
                    
                    LineBox[{{-26., 0.5083536924467482}, {-25., 
                    2.5083536921542318`}}], 
                    LineBox[CompressedData["
1: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
LdnbdswEKf6v0mDpdeMuiZYp+h8RgizQ
                    "]], 
                    LineBox[CompressedData["
1:eJxN0ntQVGUYx3EkQslCLSMpit1lgV0uy553b2ct4SXFidTBzNRyvAQaYgbi
jDUCKgqYNxAFwlQkr6CjwqiAkNkPEKRYcBcMNZHUciyviMioWLaewx/PO+/O
znfOztnPec6rjE2aMt/VxcXlkPPz/Fteo+G5OrUvcdyViLHp9YPbeqyoisrr
GzyhLyK1Tr3B45oVK4e/n7JM68b3N/qt399iRaJ27einPsN440a4Haiw4lzf
K++4u3jxCyP7nwzfZkXhkRU/T014m3fNbl/UlWLFs7ebXUzXVfzCwujPRsyw
Yk1MUM/uzYH8jDir/oBgxZVbnYbe6hBe2uRZWjLYeX3Z/diRYQKf9G7CySY3
K+JyX1t5YoLA96ecu7vlmYjOvfsWa+MFfnTN5Aj3RyIeVJZY4lcJPHHO5cOq
uyL2NXqfS94m8D/cUkf/fVVEb3t/VPRRgbt+o70+rV3Ela5J2XeaBH6h4u/D
iXUiFtwYdnB2l8Dn1p7IDysTkX0ncseOHoGP/NPzbHaMiEyXdM+DkYwP+i+2
q3CMCN1PCGQxjFcfO585IljE0HmrKlUzGRfdvqp78oaI1x/W1qTOZ3z5PVXh
x24iYhavNo5JZHzj0seuPt0W1PxW5xe/lPF533W/OPWSBVP9M9Y+TmH8hSlD
fuhvsMB3Tn1s7wrGF5Zyx6vlFryVkXF0+irGv5CWBdu31n/jt5rxJ3tjnNuC
ndvlzvlTdG4L1DvlVknLAu0PclfOHercFpTvkvvD4t7o4l4zqnbL3XX5+TKD
75F7ic+ZZJ8zZkwYaPeZ5S/OLDejY+D3sscMXbHcjyWPGflFcmdLHjOEAZ+f
5DFj0FbqMcM9n3pMCN9EPSYcWkc9JkzKoB4T1GnUY0Ls53I/kjwm7JlPPSb4
ZND5mHC2mnpMqPY4LfUEyWNE55LTxGOE5eFp4jHi19wG4jGiMKqReIzIetZE
3pcRnq2/kPdlRELmr2Q+RuSrmqWukjxG5JbKHS15DJjtZSMeA55+aSMeAxYd
sBGPAYdbbcRjQM9lG/EYsK7LRjzO+w+07DEgaeD38nwMqL5kI++LgV+kHoYX
OqiHwbWNehjea6Eehtk1NnJ+GHYdpx6G8WXUwzDxIPUwlO+jHgFf76IeATuK
qEeAchv1CBhSSD0CtuXQ+QhYnUs9Aj7abiPnR4B7GfU4/6+ZevTwvk89eqT4
thCPHrXTWohHjzvftRCPHnE5rWQ+euw530rOsx6xo84Sjx5Fk+WukDx6TEmX
Oy/8H+cOQ1aJ3D9KKwymRrml2+WEYW6n3EOlBwqDx025bdLSIeS+3D3SgdTh
rx65pcdJ1uGDPrmjxj1fOkzvl/vLWq9FtV46DHe1S71F8oRi6Ut24glF1kg7
8YSCK+zEE4qSUDvxhCB9rtwPJE8I3JPsxBOCthS5Jc64EHRm2IknBJr11BOM
imy5T0qeYGTlyH1N8gSjYCP1BOPGt9QThCOL7GQ+QWicL/ebkicI+2OpJwiT
46gnCIi3k/elxZMkOh8tnqZSjxYNG6hHixnF1KPBint0PhrscHdI/Zbk0SDN
20E8GozSOIhHg6XMQTyB2CLKXSN5AvHVaAfxBGLIwHXZE4h5goN4AsA8HMQT
gLynduIJQF03nU8ATl2n8wnA2kt0Pv7wbaPz8UfmL3Q+/qispfPxR1UNnY8a
qSV0Pmp47KbnR42JRdSjxvvfU48atwuoxw/RedTjh5mbqccPily5X5I8fvh+
E/Wo8GDgelXzxOglxSr4vvzPrTxna1oDkxYsUaEgjX1wPYNx5blZ4WVRKky/
dmjjG2sYL7p8t3K8twpxY2ZUB61jfNfN3y/o7ihRnW1sfSeb8ZB+5d74WiU+
a49sfrCZ8feGnR51v0CJ8Z7p5QcKGW8PqDU3L1QiLfzecr6T8e5I7/8eRijx
b9wmw4l9Tn/wRY3HCCW8cgzdCUcYP6/7PbL3LwWOzbjakl/JeNuHPtFVPyrQ
Ub/VJp5ivHVlcfiUAgXSzn56+5MGxu0tcaqGZAVKU9Wht5sZ7zAm9A77SIHp
TY9y+h2MXzledpwZFFhf0TEi8zzjdydZ4kJHKTB27KmKrE7Gn0nLF+nJZSku
Vxn/HxFd/sY=
                    "]], 
                    LineBox[CompressedData["
1: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
Yd/+r9JheesPHUmU+di/HD8+wA==
                    "]], 
                    
                    LineBox[{{-25., 2.5083536921542318`}, {-24., 
                    4.508353692203942}}], 
                    LineBox[CompressedData["
1:eJxN1XtMU2cYwOFKy6VcarlLBUE0kUILvZ32gIqfgtw0thMZQWQyh2hEpig3
Aamj3ARBoaAwUC4hKl5AB4KC01cmYwhOxY0hAzTILDqHMNAAOhz0/PO9aXPy
S3pOnr5fky7fdWDrbh0ajaacfy9cqXEH1dOiH5eaMtAbm9bE/yZJSO6j2ppL
lze/IuHjINXp/L40fh8Ji0aoFqzysAj/hYTcN1TbWy3cQEL5BNWK2Rr5bA0J
khmq4enVma8LSFAsKtb24WqvRZkpJEwxqY7UDgl25lTPLNwuJ6HSiuqTL8n8
lyQJgSyqVzguzPzzZ6nnN4Ubzb9I8O6nelPFlH/FlAzS6qgeGlwYGYzHU33I
tiPGtkMGJ8RU64Ve0w29JoPgETXmkYG0vlDb2q8jl8FAMNX5Wo8MrptTreU4
zvdwAeaZ//x9qgO0HikQLQWYRwotbQWYRwr7hgowjxR8TQoxjxTiZwqx/Ujh
e0R587QeKXSmqrH9SEGnUY15pOD9Qo15CCig4/shYNQO3w8B/m74fgholBVh
HgIGXaie1noIuMwqwjwErLynxvZDgK8X7iHAtLgQOy8JZDbh+5FAzYVTmEcC
UXtPYh4JDEznYR4JPE7Kxs5LAr2vMrHzkoBJWQa2HwkcPpOu7WatRwL6Aypt
+2s9Yujaq8I8YoC1KswjhuHtKswjBgmoMI8YFBszMY8YPo3jHjH0KLIwjxh+
jcjC9iOGCV4Wdl4icK/NxDwiuPIsA/OIwOtOOuYRAT0Y94igPPko9vsRAcM/
BfOIYMs3KZhHBHEPjmIeESSlHsM8QtihTMc8QrB/eBzzCOHunlOYRwie8hLM
I4TR+mZtSwXVcZNyIcTuM/10w5qBjrJVyXYeQkgdMWxOd2Gg1frMxJGVQjBY
VjOWtZmBYiwkUX5sIbCsB6vvJjGQHckI8v8kgKJHN566NDHQ+kNHCM2oAEp8
Xb/rnmOgwTa1sWOvAGyUPpertumid9zA/pmfBMCJn/vicrMuMgyr5WwKEkCt
Y6DQ7JIBGltv2+WwQQC3kAVnmTMT3cy13J7jKgCap+fdkRom2u9R3JHFEcAR
zhOHSI4h0t1SZm6jJ4CVvd2e1TmGyCRPnpIy7AZ6MUKb0veG6IVvXP5Ysxtw
/p6rDwg1QmndF8KyT7jBLm+C3txqhCY5mtf+4W4wlPKb2ZCVMbKK+Tj3Zbsr
fHBYp2ggTNDB9u9mIkpd4fNjazotwwSd57t1e0XP99DxsMQeE9RaS0+YRK4w
GVC803YZC110/zxz2MIV/rTwYL7dw0Kxg8uD2jV8aFqTuF1Tz0Kc4qhsTQsf
0tvkgawPLFQePqDuz+OD73mYDPdYjGbXxSacC+fDnObB6ucp8x26dLN+Jw+W
pF7PdOCykbXhH1bych4Y8zOW2PuxERlfY6g8wIOJmgl1ViQbhVSqVp3ZwIOO
vz5Mh6SzUVJ2bPQZSx6cfFfke7qKjc66JgwoR13Ar61LueYOG90rzI1VtLrA
v2FlVZv72ehV43WCme8C+W30qz+/ZyPj4tf2l8JdwHacUX2JbYoedi+MM/iJ
Nw6k7jZFhrmWytpKZ+hMFq7tTDNFh7oCfDYmOENYBfdW9XlTZJC/37FS4Qx6
5/gKoyemqL0nybyF5wxtCWt16DpmqK40zkZt5AwFvJBHx93N0P3hHRKXf7gQ
e/tYc0WCGWLUCSLSnnAhalVji/dtM3Tw4/jFkptciIue7EvUN0d6XWd1vq3m
QmG+p9maEHOUSmOW9X7FhcWRB0uuRFugyoc+eRkOXBDsJHfm7LdE+0TBz5I0
TjB+5HTk70FWaMDVQ9nU4ASKppy6PK41mm57l0pmOMFWC0tZg8Ya3R5L6KPt
cIIpNUHzObUEOf/Qk7uYdAKSeMv0WWGD1pvQSiNsnMBumtzWUGmDqP93J6ga
WPo8z4CD/gecM1Zz
                    "]], 
                    LineBox[CompressedData["
1:eJxN0nlMFGcYx/HlUgQbWURAxYKiZRd2Z/bepSC+RcEAVrQiJYIUbwFFQWpp
wYpKkHPFlRUVZQGJtU0TaIviUeAHtUIt9SgeVMQDFYNWUAQVK7HLjH+8T2Yz
+WaTyWfeeaav3PTZGkuBQLDd/Bu98+OLXe3F9VOF1uTwf+KFtwZ0eKdxH+fn
MI7crW6oUnTrsM4//EzU2gmk1a3ByuqiDreSDevP5E4kEYGixE9P6vC18+Vj
LfauJNtj5KawVIfxBXddInynkS/q/JcsytAhpPdeF5s7nXSNedRuu0wH2yH/
kC//nEkEE97G+Kl0mBNvsfCbVSLyx6X0vkd2OgwEsf8GLJaQ3ULbyGVjzc8f
P6f1g3wJ+cE5ZX2ehQ4PYs4JdjVLiPLO6Vlpw1ow2kZj2SsJ+TDxTqFnvxaR
pezuOG8p2Ximu7ygW4u43EnXWpdJyYy/fov9pV2LUIvk7TdypMTv6M6WkmYt
JloFZhfUSskpf/dO32ot6vU5vY+6pKSoY9dQw0ItrsaGucbsYIjr9YKkQX8t
Wlx7HK8fZoi4Xruq2FsL3ZXSbKcTDDlXmNVe5qKFKGfDFpcLDHk4f0vjRGst
imdH/XO7kyGGJ1ZeL/o1+PZ57KmExww5n6axm92pQc/RTIezQwzJ6reLf/67
Bm0R9fcujTDkQviOuQ41GjDWkyTfW7JkLTcaFLvk9Adbs2S4KvxNVbgG+vl8
F97X6e/rNPDfxrfnjNHRoOIU3yfj7M2XBieH+Q41DYaYBtXYSXK5vt01OmpY
F/Kd4taS7Naihu8dvsdE19hE16jhqc3jmveocWVjPtevOY8a5y/kUx416jwK
uOY4M9Q4tqmA8qiRW8d3GOdRIeF1AeVRIVhRSHlUcFtTSHlUeFpUSHlUKBXo
uX7DeVSwnMm3nvOoUBWmp85Hhayv+K7jPCoc+Y7vEM6jxGCnnvIokeO0h/Io
Ebl4D+VRYoVhD+VRIjStiPIokdRcRHmUcHLcS3mU0K7bS52PEh1Ne6nvpcDb
6QbKo0DZbgPlUaBhwEB5FIhdtY/yKJDaW0ztjwKadUbKowD6jJRHAWHmfsqj
wEdTSyiPHJYooTxyHE86QHnkcPQ6SHnkCOw9SHnkEOUfps5HDu2iI5RHjtqR
I9T+yFG6r4zyyPFEaKI8MhxPM1EeGS63mCiPDCvfmSiPDHHu5ZRHBh+Pcup8
ZPj5/f/8PssgnFVOeWQIkvF9gvPIsOATvvcF9JovFqIovs9yw+JWKt/c4/Qs
Vpbwbc+9EIvGRr7buGGwOaaC6wFuIRn05fHNvU4yA0Ut30HzRodBQAffiU3O
G5qcGdi94tvAeaQoc6ikPFK8mllJeaRwUlVSHilezq6kPBKo5vP9gvNI4PW+
eY8EA4F8c5x5Ehg+rqQ8EtgwlZTHB+HT+P6V8/hgsy3f3ZzHB6v7KyiPD5i/
KyiPN6xW8H2x91paiskbHTuefS6yYUlO8AJpfIo3QnxuF7WNNe9XN/u4Jsgb
EcsTDinHm79fY2Z1yGRvvHQxpi53ZImgM2Cb8qkYiuhY99ApLNmvSViS1CTG
GK/zh4Y9zZ4rloo3RjFS09t6ElmW9PxoO/lGghgZUclWFf4sMbWk29oQMdwa
ap8dCDOfz08e9pOEYmzdsqPTdjlLMp67Ro88ECFH5qtJ2MgS/+zVr+vPihA+
1Cmoz2AJs9nqfqRRhNameD+LfJYsrR6a0poswktj90PNAZbUzPUrFy4W4WZy
sCC2iiVEejVFqRQhZakxb2u1eZ83wCB1FQHkUlbmaZa848YLUA72pTez5H8L
H4mP
                    "]], 
                    LineBox[CompressedData["
1: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
Rz7cGty/cvt6OtH/3/lYv87mUQbHnvwfvrSzhQ==
                    "]], 
                    
                    LineBox[{{-24., 4.508353692203942}, {-23., 
                    5.601360570153306}}], 
                    LineBox[CompressedData["
1:eJxN1FtMFFccx3GscSGhps2ygNC1VolRSNfObWeIG9rjSkO5KGQNEcFQJEX6
YLOtlwZT0hQlhBi3LFq1T+USbL2gUqUQQ5r+7EVoIIJUYZa6s2gbdGvcUN1E
pWnTYc7L/2Qmk29mJvOZcyazutbvq3shISHBZ+6LRz5yUZs/agSS7CyaMdTw
7xMNl9/hnZ69tHRwTkPDFt7NLv2QSzfP+3gL6zY6akY0vFvB+7W0xRs0NFXz
LlvoKV3o0bCijve13y4839WuIWsP733dm5e0NGro3sd7tzU0nPiEt3V7qdmt
vD//I9fcNLzZwXuNNTQEfuA9UJNsbhoORXkXdcQLO+IqVq0cs9oILw4VtZW8
9zqHP3IOqyjp4m2r6ltW1aci/PcY8aiIrb5h9XPLo+JMM++A5VFxPcY7y/Ko
8NaME4+KlaFx4nGjYscE8bgRn50gHjfm/TeJx40S2yTxuOF56ZbVzyyPG6+f
u0U8brhyb5P5Ma+/ept43Ch3TVldbHkUfPrFFPEouBybIh4Fcc808SjIb5wm
HgVdDp2sl4KGt3SyXgo8u3UyPwoetPIetDwKGr/hXWh5ZCxc04lHRq2uE4+M
/r904pEx/0wnHhlbU0PEI8O/NkQ8Mr5+O0Q8MmIHQmR+ZBQMhMh6SbhimyEe
CWL9DPFI+HF6hngk1FX8TjwSRliYfD8SqsbCxCPhVJ5BPJK5HgbxSEi+aRCP
CO8Tg3hEZP1jEI+I3gcG8YiIDBnEIyJpkD+/8Hp0dnuZiLaJnu9TltvZr+93
rb/kETHyy8KO05l2NrclkLdnvYi+k5ErXtHOug9cWNWWJqJg87bRh2Xm/EaW
jKfbRARGyzs7D9rZ/NEjxbanAprfuC/tOm/+LxoLTlRGBeT4Ew+75sz3uZjb
6wgL+OzIQHBZTgprzqoOKpMCWpriVdGPU1jet/mn5T4BRcnD/fMtDuY7Opl9
Jyig7avqYG9TKvu5P/HVDfsFbPMMxZz1aaw958+m7EoBx+/eGd+kpbOhR/Xl
N7wCfO0/ya88Tmfe/4596dwgIFjkzzx7agVbu7Ou2OEUULJ89vDDdRnsvcTI
B9+9KKA1lPrhve4Mxv+HAjZdejkSSMpk/wO1vFmA
                    "]], 
                    LineBox[CompressedData["
1:eJxN1GtQVGUYwHEgEAYWUIHFvbEXSJikPLt79pyFmeAhWIguLpGSCXhZQEpF
ackKthRWC1oFW4wKUImbBtK4qCMkYA+KXGRAcVIQdXUgIERNREgQJeD4gWfe
M2d+85555z/nwyvW7IhMsLKwsIicfebezChRE9JuzrZbCvtTuO6qMRqj4j8e
2Jm2FEoPpLde66fx8Hr7tUZrFwhcLXM92UUjKTdTd4+6wKbGlVM36mnk9/2V
odnkCqzur9LeL6dxzdaHymWkGwTkOeax9tFo7nwtxlLIholnD8Ldt9N4lmUY
EUjcgXLg5ietonHQizWU9OYyeH7eqHf2pVHjXr1qNJkD9Y7Lc/eLaTRdCure
cJEDFxxSzb+40ah31PmkuHBhcYMhkbSj8fqdmLdWRHOhRBz9+oZJCiuDhryy
DnFB53dvJWeYQks598r33VwosFbu0HRT2HtqPJhg8eCFPmTEv4lCsik1XefP
g4rTzmUlJyhcHH/0262a2X0N+5l9AoUNplvVyks8sPEOTc1dRWG04JbW8h8e
iIqS4pYoKeTllx+JtuFDePv+PzLFFE57+inCJHzQHy/VjdtTONnwE9UUwIfO
wJMV654ocFniuZKr6/jgk1UbXHNbgVFCU6r2Cz7k7j0T7tCiwNODW+tKjXxw
UlTVRZkUKGsYTdxcxYfN86PAz2t73tVZCuDXLSkGk1qBtRqt0oMvAN+pls4l
fgpckXktvoMWgK1bvNwgUWDnq1ZdWasFQNSF1XJYCjwU8PTrCK0AKu9rY3Gc
xIKumk+8jALQVgxIdt0hsdUMP1pXC8AwWmT3YRuJks0HZx51CeBxU7FT4CkS
jyeeqBweE7zsIbHQN82rfYcHNHcE/HBZTeLiMx/d6M7zgMbvxgey/UhUbQvP
V53zgDVGQ2KxJ4l+anW867AHZDx47mrvROLQ+k/9Q9hCUBWqH7Y8lWNU4c+8
ayohlBfsHuvtl6Peute25UshHB7J9gq+LMekAmKGUyWElTlpGRZ1cmTHFlp2
9gkh+fzG1G2RctzyX2M6GkQQoP9g7a1AOVYsiusNKhPBRITscYevHEX71jlc
OCuC/DdeCQviyLF9728uIZ0i8OI1RVE2cjw+9t5Yk1kEheyd4t8fybCxO6xS
dV8E0yL2sfKbMnSU5iubJ0QQ6n9sSNgsw5wZOBL6QgQ6jU8/zyRDVXDgzWYr
8cv/I0Px3YP/hlqLYbJMPVWmlqH5CuOcfuXskqFtPWNPydzI8FAx4zMbHWaX
DA9nMH6n6El40RMp2scwNt+eGyn2EYy1/JbP+C1S9LZgvCjaZBNtkmJPW+68
mR4pPrRgPDXfI8WIVuOCHil2FTKez5FIUaszLuiRIpFoXNBDoNMG44IeAu3j
jAt6CFyeYlzQQ+CmA4wL8ueGwLoaxtmx9S9S9xDY+zdj8I1cdGQ7gQnOTG+1
zdwBBMbQjO8OX582vU3gnzGMr/RcHCmiCczZzXjXVe9vrnoT2FbE+N7c5xwC
kxsYswdDMq1YBOp7GDP3IYGWo4z/B3wdQks=
                    "]], 
                    LineBox[CompressedData["
1:eJxN1H1QFHUcx3GG4sHYo7vjwEYvGTQEJ6Xd271dGCJ/MjyKD0ioEzdDgBBk
CUbWyIMUOBoygIAIhCLxGA/HQ5IwmtbHwzifEgVLBxEEqSRLGXEKHWKCvf74
fWd3dt6zf+xrfvvbdYtLiUiwtrKyipg/F66W8UZcwJWRAns10cYntJ+YluDb
FlNhf0tFJrYY3d/8VUKomPlJVpWKhF+6mXD7poS80Vc/fWxQkR2XR5I/NkmY
awqsNKhVxHXrZaJol9BYMj1mgpLkvF9+p6FcQs5xj43uiUqSbxe01u8zCcV9
Y3dybJTE741fPhiMl9DkFqDtkV4mZfeCY5NCJJT+fd0cHelILnDj8U8kCTP5
vjNXhhTkncU3Br9fKWFne0bLwRQFiSzWtP+kkfBbVPFIoVpBTlUbp5dZS9hV
klk60cuQff5f1p98JGIu0u/qF/sZ0pI2hNwhEcdrBw/s3cKQtwJ3h9T8KCIg
Y+357jUM8WmI8p3tEDEz8nmW/ysMeU8eEeF1x84tVTHkWf3m5/WbRewIqpK7
4L534X1vES7mE3KvWL4wIhLdv5K7O8Zh/hCxLbZG7vXVT0Orn+oxkV4r98jd
hdFDnVond6rW/JHWrMdwUL3ctoZOG0OnHiHPLG3x6NHd2Cj3jOzRw37F15RH
j4hKS8uc5XqUME2UR4++NEuHyR4BU2NNlEeAKrCZ8gjwqGumPAKE2WbKI6DI
rlXu57JHwOMkSxfKHgGaP1qp9REwm2eUu0f2CGgJa5M7VPbw0K5upzw8IlZ3
UB4eGzZ0Uh4eTP43lIeHuLKb8vA4UtFDeXiMK09TnvnnHT5DrQ+PEKez1PvS
IabqHOXRYeeaHyjP/P1eUB4dgt81UR4dJrvM1P7RYdHoRcqjw6DLJcqjQ4Dh
IuXRIdrYR3k4uL50gfJwyN0DysOh8uF3lIdDZEo35eFwLfX//WmevLc9nMNg
r2eGxxKGZCbXeHb4ckg71N+1Xs+QM1EFfh96cjD1liYeiGNISn6b62EXDg2p
e8tu1TCk8gXr/sW2HF4vSyfrphnih7ww239YhHsdSzBtU5DtpuCjUZMsNL5D
NoarCvJgkY9Rc5dF+lnJzWH++54qiy4SBlhknezqGfjLkSQzgQ18J4vhfZ3f
Th1UktcGBlYNF7FwHggrMmariPKB3TKvPSx+/7n1kTZRTbhNE9mroli8feh6
/zrJieS+mLT1mj8Lw5+n+aVPnIizw5EKrReLf+cSlzSXa8jt2IQwjZaFz/mh
/Q89nMkN+9FdpxgWSl69e7zWmVj+hyyyIx1HC+xdyH9gXjKl
                    "]], 
                    
                    LineBox[{{-23., 5.601360570153306}, {-22., 
                    5.848307588401612}}], 
                    
                    LineBox[{{-22., 5.848307588401612}, {-21., 
                    6.13015923255614}}], 
                    
                    LineBox[{{-21., 6.13015923255614}, {-20., 
                    6.508353696390857}}], 
                    
                    LineBox[{{-28., 20.62552263973464}, {-27., 
                    20.62552263971787}}], 
                    
                    LineBox[{{-27., 20.62552263971787}, {-26., 
                    19.508353695665676`}}], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    
                    LineBox[CompressedData["
1:eJxV1nlUU2cax3HUVlEZ1oCoUEPYl0AScu9NAtpXq2irWJeho+KoZbS2YBUX
FKtYxdHDQQsVy7iyiKLUMhaLCIPI/BxZLAlKmG6OilqnrRaUFhkZLeKE++aP
Z94TDud7Qu755HnvG+KXtGbeiqEODg7XbT+Dv/mKwS/bUpmqWM+q7+xpmPLY
hOXKVTs66vVs1tS4bZZ7JriPu7w14t96Vh8WpS6wmtCXkqZzchWY4ydx1nN1
Jnh47SzJmCIwzfa9yR6lJqz07rJs3yIwfbfD05psE3rWVZz1vCAw97vHt5a+
b8K5wLY5sUNEdi0h7T/fxZtQoZl5ujdeZO/Ep/1pfrgJd/f71U86JrKEBTse
9SlNOPHoRnBztcju/BLpFuxpAtYdD+m0iGz4mG3mOyNMEJTpOH1HZE0tq30D
nxox8GRh98uPRaZ0GjKi974Ryr4ZVf3DJOZ9Q58V/60Rh5XT3HM9JFYmjTqm
bTAief3s4Rf9JPaV3465xZ8bsa97+b7dkRJzKv/Z97PFRixwwdF9b0nMryc9
p3e6EQ9eytxzfqnEijPLtjhEG/Hq7bvuV1ZKLPuPm3+46mvEwsLbuqbVEvtX
Zqd5qaMRwpQtnRUbJJbfMxBZ2WPA1y3nYrM2S6ymvNL5y5sGGA17g2ZlSGzq
2ZEpx5oMWJY95NP+DyUW4zBkamyFAbMuKRoO7ZDYO/IyoLC/cZN/psSennjz
2Yk3DdC7Ncmde8+Qc89gwE0db3/V4DIg923e55eNtj0MmFPAe2ZR7+tFvRL8
fuTdcWtwSXgR0yz3Op/mtT7NEjoLeQ9PrHg5sULCD85X5OYeCT2VX8r9TPZI
iNG0yJ0jeyQ8K+Atc1QSIp63EI+E9niz3G/IHhFduWbiEfHBZTPxiNh630w8
InoHzMQjYp6jhcxHxGN7fyR7ROSNtJD5iAgdZSEeEbX25h4B00dbiEfAVXtz
j4A5ThbiEWC2N/cIiHPm/V/ZI6DamXoEBLlYyHwE5LlQj4A+e/P90mORK/Xo
UetKPXp4ulGPHu+7UY8e6e4Wsl96XLE33y89vDzofPR4297VskePU/Z+XfZE
o8uDeqKhVlBPNJIV1BONkwrqicYiT+qJxree1BONe17UE40MbzqfaJSMo/ul
wwJf6tHZzjv16JAcQD06NIdQjw4rjPT+0aF+IvXosJJRjw6LJ1OPDkWMerTQ
TqIeLVxN1KPFRD31aPG3COrRosOJzkeLzcOoR4v3fjOT+0eLM71m4tEirpue
Lw2ETnq+NEi/T8+XBq4/0fOlwcCP9HxpkNdlJvPRYOSvZnI/a/CXZ9SjQaz9
vFXJHg16fXjvn/TA9ohCg8D7gryiUD6ft3y5nCiUbeQ9Wn5DUagr5G2RVyRi
pFa5e+QbMhKXk3jLb2dtJPp28Z42dXBF4p/FvFMuea265BWJP1TyzpM9auy+
2Eo8aiz5eyvxqNFR00o8ajiebiWeCCQk8H4seyIgxFBPBHb785Y5UyMww5l6
IvDBbxbiCYdPJ+862RMOzS3e38uecJyz0vmEo+wKnU8YeqosZD5huFHBe5zs
CcPicgvxhGFDmYV4wqAqpfsVivdK6H6FIq6YekJRW0g9oWgqoJ4QMHvz+YRA
Z7/eeNkTAvVZ6rE930I9IZj4kHqCMW8cn1+t7AlG6txW4glGfh7dr2A03KL7
FYSB51eJJwhLfn+NeILgePwa8QThxYNrxBOE2NA24glE07I2Mp9AHP64jXgC
UVPTRjyBUF5vI54AnFdaiScAB/VWcv8E4ECclXgCUP6WlXgCcH25lXj88cpa
K/H4Y9sWK/H4o3cn71Gyxx+7sq3Eo8LOA9SjwqHD1KNC2lErOV8qKAqoR4X0
o9Tjh2L76/l++WHvAerxQ+x+6vHDFx9RjxJxG6lHCesaK9kvJaal0Pkocfhd
6lHiq5W8gzLagzPaJ6Db/vzGTYNrAn61v75h8HI+E/BNKm/FqsELvILiTbwP
HBpcvnicz/sn+Q364rNC3qL8Ae2DI6W8s+Tlg7rTvL/JVH+XqfaB+xnqGY+j
n1PPeCTau1H2jMfsv/L2lD3jkPYp74OyZyy8/88zFudzeEuyxxsns6jHGz9n
Uo83tmZQzxgkpVPPGBxaTz1j4L+GzscLA8nU44mHS3h3/e7UzqWTPbE/c4LD
UNv32Tkbd5XUPVLgZu/IQwW277/17fonFccUaKz6eMqTTRIz+Fdti12kwOzG
yv7RqRK7uHJ47FJvBTb7r2/uWGF7fXFI5NibHpjWdrVk9UKJPbKMT0gu9cAX
5qacC29I7PDD2xXzNngAnol7Go22vx+aNrl9hgfWnNlzcG+Q7f9Rn0v+Vbhj
h+vCf2R/L7JApxmnUl9zx/CX0sw3jovsyKu+6TVtbujPul35YbLIvPNyR5x8
1w1JRQe3bBRFdnRYUYJxtBtM04tVGCGysE9mJq2rccWftz8pW9whsPrX8tVz
U10xaeYR51m1Akt031r9tc4VKady5uccEdjzF4PLBY75g+dfYP8DOEQwWg==

                    "]], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    
                    
                    LineBox[{{-26., 19.508353695665676`}, {-25., 
                    16.508353695919453`}}], 
                    LineBox[CompressedData["
1:eJxN1mtQ1FUYx3EMsgQJNUVkifYGe4Fddve/tz9K/gtULilIxpgokqaOeUEC
RUctQ6esBPFSRhLkZfBFIeiIlhb+llWRXHR31ElFU2EEc3TGQE2WGsNzePGc
2R3mO7O7fPZ5zotVzCvIXvBCQEDATwPP53/5SURWvatEVSpI98adWP1fr4i6
o7zDdYGZx7pEXGrivdFwpdRwRcTJFt5mTeLo/LMiCn28X2dvEHGvnXeWf3+m
f78IbTdvXKzre3+bCGMv76K9yUM+WyfC/4z3QnZElIU2s2ZvzxRxXcZ7a6ez
vNMpolPPW8mOiOpE3kfzQwYeIkIzeKfXPEqreeSEeTbvP288P06ELOf9UVRL
YVSLE5UbeA/NbXgxt8GJ6zuaiceJssu8+5jHiYt3qceJZ328VczjxKhhbuIZ
+H/hvDOYx4H7cjfxOHBY5yYeB+aa3MTjQK/VTTwO7E90k/k4MHYC73LmcWBH
kpvMxwHZROpx4EfJTeZjx+S3qMeO+8nUY0fVJOqxI2cK9dgRPdVN5mPH4Wm8
y5jHjuuZbjKfgc/Loh47erKox4YbWdRjQ14W9diwMpN6bFBOox4bAlN5P2Ue
G7KzqceGmJV0PjasbaAeG2YEnSL7sqJhxSnisaLi8SnisaJ3+2niseJa6hni
sSIlsJXsy4pOXyvZlxUfbv6dzMeKq7HnWB9jHisMdbzTmEfAYpmHeASUFXqI
R8C39R7iEfDVZQ/xCCjq9hCPgMeDzT0Cbt3xEI8A220PmY+Anqsesi8LIrzU
Y0Gtm3osqDlCPRYE7KMeCxbmecj9sSAjnXoseOakHgs+1VOPBeejqceMe2Oo
x4xLYdRjxpbh1GPGyOHUY8bpcDofM+qjqMeMIRoPuT9mHLVRjxltqdRjQlo+
9ZigX0c9Jiyvoh4TIlzUY0JxRhuZjwldq9rIfTahaW8b8ZjQf553I/OYUNXP
e8cbfw08ErBXe571CXYSMCKHN/u48gR0bOQdwr5QAiIP8/awY0Rw+gXWPexC
GvHxKt7s6xQaIVbznpTy/BiR5OK9xBW+1BVuxOabvLczjwGRfReIx4AnoV7i
MSAi2ks8BmzSeYknHn6Rdy/zxGPNRC/xxGPqFN6MkxKPwule4olH9xwv8cTh
0FLevzJPHDzreXcwTxwSt1FPHPprqUePi/94yXz0qAnzsY5kHj2+VPuIR49d
dh/x6NE8yUf2pUNoto/MR4fVuT7i0SFono94dKhf4CMeLYYONp+PFg8HXy9j
Hi365lCPFsoc6tFiUQb1aNCWxPs482gw3UA9GvSMox4NjgRSTyzaDtJ9xeLO
N17iiUX2JrqvWIwuofuKhabASzwxqBjcF59PDN4uoPuKQW4J3VcMmjbRfamx
vYV61Ghsp/dHjfwH1KPG1n+pR43kYXQ+Kqx7le5LhfEyOh8VPpHzDmYeFdJU
dD5KbFDw/rvyj501e5Tw7F7UemuDII186Z3vX1urxNbhcU0R6wUpfvTErsnv
KdFSJMs5t0qQJNfuAtkEJYp8zm1Plw38/nplsbhbpcSumI0FP8wTpFn9tcln
wpQwrfA/bJ4hSHM3v1teFaBE0qHqMfkpgpTXWDwu+okCrrsFN0rMgjSzNOhO
+kMFjocvTw2OEqRlx7eEzK5SoOLn281r/CbJf2DJsZpMBSoTR0nzw4xSQMae
u2OCFbjyxdmT8z/XS+v3GWqazsnRntcV9Hi2Rio6NKK9cqcctb8sCRtboZY6
itOrDnwgR+J3M2+2ypVS64NrHd3j5fg6oK44NEwuaaOaD86KlGPFVV+1uzFK
4r9X5Xjzt4ibZS9HSv8DJC3ahA==
                    "]], 
                    LineBox[CompressedData["
1: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
w7ByQckShzsG9j9hTuxh
                    "]], 
                    LineBox[CompressedData["
1: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
x4ZA/6+aoWP96Of7fjKEfwAFY+gY
                    "]], 
                    
                    LineBox[{{-25., 16.508353695919453`}, {-24., 
                    13.50835369582842}}], 
                    LineBox[CompressedData["
1:eJxV1X9M1HUcx3EETAOTEjgQEBE0774cx/d+fr8i5jdEJhDizBnBkh+d/BNa
pJlTWGZYOcZh0ZpzMsJBMMJGlPiHLV+A3HHHyXFi8SPBUnIE1gBxIRsW9/3w
x7v3vrfbc7fv3eP7+Xy221Dw9t6D3l5eXh8svjzvbLYgy9rxfsxpXppYe+34
wiMROx2sQ1Q+mVcfiKjuZV0WN3g6blBEbj9rfnNCUF63iE8HWa9XeG4QsW6U
9Z75usz5OhERY6zRf/lJ/mciyiZYH7m0Y9nHJSJem2ZdKI+IqjnWTzy3Z4q4
+C/ryvui5b4oYmB5p9wx0Z4RkeTPui3Pf/ESMRLAOr1mNrVmVkBjIOvREc8I
qFOwfjfCVhxhE+AOZf1MTsvynBYB8WGdxCMgKJy1/DiZAuaWPrfIHgHZSy1z
ogUIa6lHQGUI6zTZY4I5mHpMaFtDPSaUBVCPCb3+1GNC6QJdHxPql7pC9pig
WEHXZ/H+/3lMuGmkHiOCcqjHiLqz1GPEiXbqMeKC9w3iMWLwKes52WNEaWoX
8Rixv7yLrI8RB290EY8RDbNdZL8MiIywEo8BjgQr8RjQtMdKPAZcf8NKPAZ0
51vJfhnwZqGV7JcBRUetZH0M+KOc9VXZs/h7zaxTZY8eUQPUo8eYn4149Aje
ZSMePdosNuLRo6y6m3j0+PrvbuLR4yPRTjx6hJ60k/XRo7DNTvZLh0MTduLR
QRPiIB4dGhIdxKPDcLaDeHTgqh3k/Ojw2xUH8ejw3pCDeHQYX9FDPDoIL/cQ
jxbmMz3Eo8Xh2z3Eo8V+jZN4tAivchKPFjF+vWR9tLh4vJd4tBgf6iXnRwtf
jYt4tJg+6iIeHi3fuoiHh/Sri3h4fDXvIh4e/av6iIdH2uo+sj48uKVm55nH
9PN9xMOjRsH6iuzhYVrPuuqlPxeveHzPsb4mTzxCt7CWv84SD3Maa3/5geJx
/gBrpzwaPG5mPSMfSA0qO1jLj1OswbZbrHcme0aDZXdYv9WuKGpXaDB8l/Xn
sicO3SPUEwfnz9QThzEb9cRhzQ/Uo0bn66wfyR41+G3Uo8ZIFGuZk6yGw5d6
1Hg87iKeWOTdZP2j7ImFXyvre7InFrNfuognFpElLuLhML+JdfreJve5Wg4p
jk/e+f0UL50crz537wSHdQ+/yw4v5aUDlQ3PdmRxKCnPMLmP8dJUii0xfiuH
gsZsH5/DvKQLWFBx0RxuJQ21txTw0ovju9ytz3FwZtuLh/fxkt3dpLMvqJAx
xQWeSualSGf07kMzKmT5PK2v1S6eh4GWmJpJFSarkrjtEbykdidI35xXwbfo
QfE/82rJPI0c5ysqNJs3nEny5SSnsOOY90oVHC+YLLn7Nkv5de2VGQ4lco9s
rNg9uVGKERIbL1cpUXT24YcB9mgpeKr1erRZiZlXLUWX/oqSjK5NvzRvVWK0
PvDC6tZIqez2F5PpYUrYV/2UUqKIkNj/uxK1d8LvVqwMk/4Du+KRpA==
                    
                    "]], 
                    LineBox[CompressedData["
1:eJxN1H1QVFUYx3EWM1+wSHHwFRTf2jfYe/f1YqlHRV1hVBTTEEFQQRogFnXC
CMQcTGySUStBc8RK1FKQsdQRDX+iC4m77m5AGRT5Mmoq6ASiqAy23vPP88zZ
ufP9Z+dzzzm7ISszFyX7+vj45Hs/r558wvF+bU32+M0CK1idXLG/U8LuxPjL
BUUC2xRzbOK7tyVobYGL7u4T2CNHY/K1Rgkju9oHR5UL7Dd364fraiQkPLrV
v/K8wLQr6tkbFRKeJ3SbAxsF1pNd3FJWLKF9pmZf3n2BTR81e9qUfAnS/lzp
jq/Ieqy/pzWsltCc0eYXHSQyjcKalGqV0HAiJ/BsuMg2R91c3WGREBOfYWu3
isxf42moniShcMXEkUuWiMxdOrTCOVTC2jPfBXQlieziD8c6g30l+KfdXl6f
JrI2656DJx5akLi+vatpncgi85pR2GxBSlNV67AckbXMtlm/tVswpmjesB0b
RXagbNk7PcctKNpfVjr1U5GlyGPBEcNF7/6I7PnBBd5lQdUs3kW3JO+y4HkM
73HyWJCawPtUop93WeCTzDuy9PHc0sdm1K7h3fr3qzGjKoX32tF1WaPrzPgz
iffrcZV94yrNmBjLm3vMGKfl/Uz2mHEjmPd22WPGywDe42WPGfl+1GPG8r7U
Y8JeBfWYYPGhHhOMCuoxYcdr1GPCXyN4d8seE9ZMoB4TBDPdHxOkBdRjQl4m
7yjZY4SimHqMuGSnHm+/oB4j+oRfIh4jMMZOzsuIoHQ7OS8jemEn+2PEyuBa
uU/LHiPmFPCeK3sMqOyoJR4DvvmgjngM6H+vjngMeGb7lXgM6BNdTzwGnGip
Jx4DYt+7QjwGPDl3heyPAZ8NcZDz0sN/iYN49Cja6iAePXwPO4hHj/SfHcSj
x6idDnJ/9BiwzUE8egR/4SAePWL3OohHjzM/UY8Ido16RLT1cxKPiF9mOIlH
xMlCJ/GIaN13leyPiK/brxKPiOV6F7k/IoQ0F/GIGFziIh4BijMu4hHw0uki
HgGD/nARj4BJjS7iEZCz20X2R0BkgYvcZwHLsqlHwNFM3idlj4DJGby/nHrP
u3Tws/E+K48Oozfwlr+uSIeMLbz95BfSobeYt0OeMEQ/4N0hX8gwVPd1yy2/
TlYYVGN5z4p4NWHYPpl32oXA9AuBYXiwmPcu2ROKiEw38YSiZJubeEJx+3s3
8YQirNpNPFpsCvDI3Sl7tJip9hCPFoMm85Y5EVq0zPAQjxaVER7i0eDzabzP
yR4N0gy8b8oeDRaO9RCPBlNf9xCPGt27uK+5rHzLxgNq/NfQWu7v/f8+az6a
uOcjNTr/GRDdmCeyjHx7fNACNXpPLUzI2iCyh/k9uQPVarwVe+raHZvIpknR
1Yn91NDUWs4b14gs6QhCxt5VYX5v0+C4OJHFuOcdtl5WIUex0x07T2SBlU/n
N5erUOFKfSFMEdmROdXDm75S4X5q/K7rau/v56T/9OGLVQgZmBmsfiKw9ker
3FHDVTjQ0WX82C6w/t1VtZk3lEgZ19HkLBFYunPohILjSqzds0qhtAksxJb1
b+FmJeqWRp7eGiWwCdfdARuXKbEy/tDTNrXA1gcZDq2yKDHrx+yapW8KbIiy
pDR8hBKtubm6HQ907KU8bwOGxw8/qdGx/wGXNJpi
                    "]], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    
                    LineBox[{{-24., 13.50835369582842}, {-23., 
                    12.508353695935911`}}], 
                    LineBox[CompressedData["
1:eJxN1HlMFGccxnEWd4kNqcpq8QIBL3QXk7mHsql5DQY8SjHGK8EakZVqGqli
jAfWtuy6uss5icYrwUqNRl2VxINCY/OQCOKFpVihKpe2iAdWWtsIkaTLvP/8
3ryTyTeZd/LJ+04mYd1XS9eHh4WFLQ1dw3c+kvHdde9faVYnez7xpx1D/+i4
2cx7/OwRmdU9OnZ08fbOaSuc06aj5A1vITFl3NpGHRHhe82Ojx5eoKNnHO8l
gyczB0/qSJrNu67l/EC2oaNtLu+tlakW324dL5bzzjWHjuw83ubyTB02H+/S
p8mhqaPiKO+p5gi9P8j76trI0NRxtpb3ouNvFx5/q2FKA++O9uGhwdfEOz/m
xpaYGxqetPCOyKqyZVVpEB9Qj4Y1v/AeMD0aNrXyLjE9Gqb3855mejTsifUR
j4ZvVvuIR8XMCz7iUZFv30c8Ktz+fcSj4r19P/GoqJ0WMPud6VHx6EKAeFTE
24rI/qgIzCwiHhUfjeW92PQoqL8VIB4FhzMCxKOg9JifeBScuUw9CgY7vOS8
FFxp9pDzUvBptIfsj4Ifg4VmV5seBUMHeC80PTIm3yskHhn2LA/xyOhK9hKP
DP8Gel4yCs4EiEfGrZRi4pHReaSEeGRcaygl+yPj87oycl4SGvzlxCPhvziD
eCS88BjEI+HUFYN4JAQKDPL9SMjMMYhHQmuGQTwSprgM4pGQ6DSIR8TfsQbx
iNg9lnpENEZSj4gHEdQjoimcd5LtTWvtEhEIRiY1WJxsmbvW6vpEhCtY0J06
6GCdnvpXPU4RzNI9Gn0O1pQTVf5zjIg751zVKY8dLM5a8bputIiOc0Wtl+od
7L77y5H9VhG7LM2bnWcd7OXene2L3wuoCEZ6TvgdLPeLxk2//itg0XnXqGi3
g6V+sKrG2y/g6xHZdv/HDta38X5uf2Po+b6ksl2WWazmoDX/7g8CVkQ1OT0D
M9jp4t6HEwoFVObN761MmM6ufvbtiZYcAR5b+fXfd05lzx7drh9aIODdb1VI
DE9gKcrt9EOigAhk1EzcFseqVu5J/D5WQFr6H4I9LZalp/3pnvChgIvzZvQm
b5/M+P9QwLyLYzpLRk5i/wMBtEIi
                    "]], 
                    LineBox[CompressedData["
1:eJxN1H1ME3ccx3FAISBhq4z5kJRN6NDK/cB7ag/tkF+CCCIOw5rg0AQYD2M6
KozNTXFTiJlSBSnzAZKtKqsLAgGVReem5qPCIGZADAUdCm7TajbDk+CcTONK
75/fL3e5vP+4yyvfu9+Fvb81Lc/Hy8srzX3OXNUVg7L2PWOrZ3P0TE5ei31S
gU7/U01AKEeN65sj3nYp0JYRR89yjlo7nHm3nAo+6r2tO5LB0ZZrw5aSqwo0
r3XNzdrF0ZPJ12lQi4I5KROFpIGjmzOO3j55VMGmHekx/zk56jOZEBe7S8Fs
+3TRr76EfhgysKUvV4H3+cH5x1cQWn85MbsgSYG54ynZVkLo+Lw/cx8rChbG
DP0+aCO01+dG3+XFCpoy1snNzYSuLA9p6Q5REBCVtOTva4SaDjdPvuGjQGrt
vnDoJqFdpjrH2VEjlv4x9KjpIaGuTwexb9CIR1c/v7RsitCa+KKkEx1G7DDb
oxe9ILTHkWF63mqE8/A7cV/4RNF8zzIinbO65xNFnzlSpx2pRsRtVbvyXkzV
vRgjXA1q68JnlhEJt9Q+lxXoPozIfKF28rGpNcemDBAX7Pf08NDMMuCKXu2P
tZ3F2k4D5ixT22/jad+Npw0I4tRWPQboJ9Tn/evxGPDBHdZjwFi72h5OuAFo
ZD0G/Fap9lqPR8YKi5XxyLi/1sp4ZAwstjIeGXNfVjAeGaPFak97PDK2vat2
lccjoz21gpmPjP58tc97PDK+r1V7jccjYaWrgvFIqE1hPRLO9bAeCUe2sPOR
sG+4kvG4n1dbxXgkbDAdZDwS+jsPMvOR0BZbzbwvEVPfVDMeEXWuasYjwj7f
xnhE+Es2xiMieqmN+X5EPA+3MR4RllAb4xFRvsDGeEQsD7ExHgE1GhvjEVAd
ZGM8AqIDWY+AogDWI6DKT+3IWaaCtvUCdo7J27u8o2jKpgcJobEChpsWzVs3
TWh3ccHL7zgBbSbzL84RQlvjrxxK1Ap4Zu+tyLxD6MiNcV//VwWc7a/JGukg
9ID2aZprlvv+u98mf9lIqFXnLL07zaP00nhisJXQhw/27v5nkscBy/4Np3Ld
+z0/ODtyjMcrk4U749373/LX19tf7+TxOHt3fdJ7kTRdytRk1/O4+Kb/D33H
9TRr1ScRQWU8CojvmfuaJXSPtu/HhTk8nuz9rK70VATt+rn0+ldJPPLEzMLa
zW9RfbglwyzwuMBdJCazjjakNhaUh/IYLam6mZMfThNW8U80QTz8AgcKg0+E
UfV/yMN7osY9nzD6P5HeRbQ=
                    "]], 
                    LineBox[CompressedData["
1:eJwt1A8wVVkcB3DpMaJHr/RUXgjTPS/V3vv+3Pvk0a/NWiU9KdlV2+ZP+rOZ
omzEGvKstdafaiNa6almm7aVJpOhrX5apCFFLbKUP+Ht9o9ki6J93H5zz9z5
zD1nzm/O+c5dELLHf5uxkZGRv2FMvPlSYVKV9qWXwAXy3zkcWT3EYfoVM1Vk
4yJou5hf+rSHw+70l5XDRxdBuSRie08jhymerhkPfBaB26fHzzPXOIzs7M0T
jkgh2EGS0HyWwwtfD/efOiEFquxtV2M6h/TN7Qcy5VI4bLq02WkPh0Zm7t7N
SKDA8o+geg2H85nooJiVBHzuFu2pW8Kh1n1G8f6rFDiKatc/deRw+e7IWuNj
FGwRl+86K+YwZDCvUryPgtFH0aUjZhy+rE/LKwmg4M2ucVo/wmL3OPjdU1MQ
UOHfufcfFpen3uiNJhRY34m6ebSFRZNwkyDdHAoUp7e0+FWxKDsx83d/IQVl
arH9uYss3l7Y/yjNlILwyWLxoOkhw/lQMHJGM3pGw6IoP2nSGT2qzB4Vi3uX
8XZynCgWc/oTJ31lq4XhYTFZx3t14etVha+VyO3g/ahjopRY6sY7SnIrUnJL
if/Z8jbdVGKyqUSJxtN48/0oce1U3kVN4sLHGiXO1l9IqTChgM0PWNDgqsTx
Y3Lv2eYU2F9zfM44K9FcaM0FiigIckswtrBSIuu71j/RloJn1juCvxxVoHZj
d1624XzureqcNr9PgcPknvAHFQXmbX3vApoUmFplUxzuQ8Hx6jhOcEOBamn5
wcXBFFS1Xg05FKhAG71LZvoABXW7LAVdKxU4+7OtIksLAlOHilO6PlFgoqi6
ycKZwM7Igv5kWwUG+gY1ad0IjPU+lNaaKjD3rf2M2HUErvuFrSkelKPnLPFP
+m0ESi6pNWy7HDcXqL3uxxC4axYq21ojx86cox6uPxKw29gy7FIix4YP86Ln
5RM4leF5VhIiR+e+vyt1twkU2v9ZsGKN4fu+1t8G/iIQ7ftVnA8rx8XeZT31
nQQcbGZ5LHOQozo0Zif7r2F9/JNeobkcP1TZui95RWDou8aomiEZ7o/Qbbn0
1rCfbduT0A4Z/rJ5WsPNMQKSDeNufTUy/PbI+vTgKVIYJB4xviUyFFgl5mRM
lX68Lxna5WUa7kv6MT8ydErlnTmZHxkaaXnz+ZFhaRZvPj8yhPO8+fwwWHSf
N58fBtstsibN54fBF/68+fww2HqON98Pg6NGhyetNBloqfBj8KFo+uIaQ//x
YRUCN3cG7XbHd60cJaDSVj/rc2Gw3qrbCp8TiAgTZV+XMNjxXl22rJ2A2OTk
i0orBgPlGS2Xqw3zw78xGxQwyF5u2utynkBjamyHz3sa4+KFybo0Ap07ayOa
hmmkstwtxWEEtk3/olw7SKPr05CZaa4Ewnc/CB+spfHV2qVZB6cshJO5gqg7
p2kceNPgkjziBNMz9W1zDtEo7/PUFy1whGJNou5+KI1X5mZXPYx1gO/b66rH
vGkccw5O0gjs4GdF3ee5DI3WujXlc6NtoTUwgTo1n8ZLv3bTM73mwjqv3rA5
QhqbVU561QEb4P+HNCZtsHycYSaG/wGk+kJ2
                    "]], 
                    
                    LineBox[{{-23., 12.508353695935911`}, {-22., 
                    12.508353695215051`}}], 
                    
                    LineBox[{{-22., 12.508353695215051`}, {-21., 
                    12.508353694926713`}}], 
                    
                    LineBox[{{-21., 12.508353694926713`}, {-20., 
                    6.508353696390857}}], 
                    
                    LineBox[{{-20., 6.508353696390857}, {-19., 
                    6.508353696692894}}], 
                    
                    LineBox[{{-20., 6.508353696390857}, {-19., 
                    7.508353696461087}}], 
                    
                    LineBox[{{-20., 6.508353696390857}, {-19., 
                    5.508353695891459}}], 
                    
                    LineBox[{{-19., 5.508353695891459}, {-18., 
                    5.508353695818784}}], 
                    
                    LineBox[{{-18., 5.508353695818784}, {-17., 
                    5.508353693713333}}], 
                    
                    LineBox[{{-17., 5.508353693713333}, {-16., 
                    5.508353696107521}}], 
                    
                    LineBox[{{-16., 5.508353696107521}, {-15., 
                    5.508353696465151}}], 
                    
                    LineBox[{{-15., 5.508353696465151}, {-14., 
                    5.508353696251022}}], 
                    
                    LineBox[{{-14., 5.508353696251022}, {-13., 
                    5.508353696308263}}], 
                    
                    LineBox[{{-13., 5.508353696308263}, {-12., 
                    5.508353696284616}}], 
                    
                    LineBox[{{-12., 5.508353696284616}, {-11., 
                    5.508353696221094}}], 
                    
                    LineBox[{{-11., 5.508353696221094}, {-10., 
                    5.508353696153223}}], 
                    
                    LineBox[{{-10., 5.508353696153223}, {-9., 
                    5.508353696398644}}], 
                    
                    LineBox[{{-9., 5.508353696398644}, {-8., 
                    5.508353696312555}}], 
                    
                    LineBox[{{-8., 5.508353696312555}, {-7., 
                    5.508353696449717}}], 
                    
                    LineBox[{{-7., 5.508353696449717}, {-6., 
                    5.508353696398842}}], 
                    
                    LineBox[{{-6., 5.508353696398842}, {-5., 
                    5.508353696473449}}], 
                    
                    LineBox[{{-5., 5.508353696473449}, {-3.9999999999999996`, 
                    5.508353696424706}}], 
                    
                    LineBox[{{-3.9999999999999996`, 
                    5.508353696424706}, {-2.9999999999999996`, 
                    5.508353696361752}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    5.508353696361752}, {-1.9999999999999996`, 
                    5.50835369636755}}], 
                    
                    LineBox[{{-1.9999999999999996`, 
                    5.50835369636755}, {-0.9999999999999997, 
                    5.508353696367891}}], 
                    
                    LineBox[{{-0.9999999999999997, 5.508353696367891}, {
                    3.3728938614134315`*^-16, 5.508353696366612}}], 
                    
                    LineBox[{{-19., 6.508353696692894}, {-18., 
                    6.508353696027883}}], 
                    
                    LineBox[{{-18., 6.508353696027883}, {-17., 
                    6.508353695413491}}], 
                    
                    LineBox[{{-17., 6.508353695413491}, {-16., 
                    6.50835369624457}}], 
                    
                    LineBox[{{-16., 6.50835369624457}, {-15., 
                    6.508353696740358}}], 
                    
                    LineBox[{{-15., 6.508353696740358}, {-14., 
                    6.508353696679479}}], 
                    
                    LineBox[{{-14., 6.508353696679479}, {-13., 
                    6.508353696701961}}], 
                    
                    LineBox[{{-13., 6.508353696701961}, {-12., 
                    6.508353696895171}}], 
                    
                    LineBox[{{-12., 6.508353696895171}, {-11., 
                    6.5083536967392215`}}], 
                    
                    LineBox[{{-11., 6.5083536967392215`}, {-10., 
                    6.508353696622437}}], 
                    
                    LineBox[{{-10., 6.508353696622437}, {-9., 
                    6.50835369684586}}], 
                    
                    LineBox[{{-9., 6.50835369684586}, {-8., 
                    6.508353696713415}}], 
                    
                    LineBox[{{-8., 6.508353696713415}, {-7., 
                    6.508353696700908}}], 
                    
                    LineBox[{{-7., 6.508353696700908}, {-6., 
                    6.508353696757638}}], 
                    
                    LineBox[{{-6., 6.508353696757638}, {-5., 
                    6.508353696829943}}], 
                    
                    LineBox[{{-5., 6.508353696829943}, {-3.9999999999999996`, 
                    6.508353696916799}}], 
                    
                    LineBox[{{-3.9999999999999996`, 
                    6.508353696916799}, {-2.9999999999999996`, 
                    6.508353696839379}}], 
                    
                    LineBox[{{-2.9999999999999996`, 
                    6.508353696839379}, {-1.9999999999999996`, 
                    6.508353696821501}}], 
                    
                    LineBox[{{-1.9999999999999996`, 
                    6.508353696821501}, {-0.9999999999999996, 
                    6.508353696838753}}], 
                    
                    LineBox[{{-0.9999999999999996, 6.508353696838753}, {
                    3.985217261273566*^-16, 6.508353696834433}}], 
                    
                    LineBox[{{-19., 7.508353696461087}, {-18., 
                    7.5083536966593565`}}], 
                    
                    LineBox[{{-18., 7.5083536966593565`}, {-17., 
                    7.508353697566833}}], 
                    
                    LineBox[{{-17., 7.508353697566833}, {-16., 
                    8.508353697478471}}], 
                    
                    LineBox[{{-16., 8.508353697478471}, {-15., 
                    8.508353700971357}}], 
                    
                    LineBox[{{-15., 8.508353700971357}, {-14., 
                    8.508353701007906}}], 
                    
                    LineBox[{{-14., 8.508353701007906}, {-13., 
                    8.508353700995485}}], 
                    
                    LineBox[{{-13., 8.508353700995485}, {-11.999999999999998`,
                     15.879851786908944`}}], 
                    
                    LineBox[{{-11.999999999999998`, 
                    15.879851786908944`}, {-10.999999999999998`, 
                    16.314025175496027`}}], 
                    
                    LineBox[{{-10.999999999999998`, 
                    16.314025175496027`}, {-9.999999999999998, 
                    16.75066664111253}}], 
                    
                    LineBox[{{-9.999999999999998, 
                    16.75066664111253}, {-8.999999999999998, 
                    17.259516041935314`}}], 
                    
                    LineBox[{{-8.999999999999998, 
                    17.259516041935314`}, {-7.999999999999999, 
                    18.878913562615253`}}], 
                    
                    LineBox[{{-7.999999999999999, 
                    18.878913562615253`}, {-6.999999999999999, 
                    19.270951373672034`}}], 
                    
                    LineBox[{{-6.999999999999999, 
                    19.270951373672034`}, {-5.999999999999999, 
                    19.707895666992584`}}], 
                    
                    LineBox[{{-5.999999999999999, 
                    19.707895666992584`}, {-4.999999999999999, 
                    20.235001472002892`}}], 
                    
                    LineBox[{{-4.999999999999999, 
                    20.235001472002892`}, {-3.9999999999999987`, 
                    21.508353699134233`}}], 
                    
                    LineBox[{{-3.9999999999999987`, 
                    21.508353699134233`}, {-2.9999999999999987`, 
                    21.50835369912531}}], 
                    
                    LineBox[{{-2.9999999999999987`, 
                    21.50835369912531}, {-1.9999999999999987`, 
                    21.508353699131106`}}], 
                    
                    LineBox[{{-1.9999999999999987`, 
                    21.508353699131106`}, {-0.9999999999999987, 
                    21.508353699135625`}}], 
                    
                    LineBox[{{-0.9999999999999987, 21.508353699135625`}, {
                    1.3170068256288346`*^-15, 21.508353699136535`}}]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-27.4, 
                    2.2221770198804688`*^-11}, {-0.25, 0}, 
                    Offset[8], {1., 3.703342615547647*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"1", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.4, 
                    0.30501221548286295`}, {-0.25, 0}, 
                    Offset[8], {1., 0.5083536924097131}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.266666666666666`, \
-1.4916463080528248`}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -2.220446049250313*^-16}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.266666666666666`,
                     21.508353698053153`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 
                    1.3073986337985843`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.266666666666666`, \
-2.4916463080543423`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 5.490274901376324*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-25.417705098292863`,
                     1.672943495690694}, {-0.25, 0}, 
                    Offset[8], {1., 1.9999999997074835`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.866666666666667`,
                     0.5083536919979261}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777807, -7.65189023255175*^-11}], 
                    
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.866666666666667`,
                     18.50835369643921}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777807, 
                    2.6005153586083907`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-20.866666666666667`, \
-0.49164630798343817`}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777807, -5.841316319532552*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.41770509831582, 
                    3.6729434955515394`}, {-0.25, 0}, 
                    Offset[8], {1., 2.00000000004971}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26666666666666, 
                    2.5083536921274465`}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888502, -8.813838547894193*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26666666666666, 
                    15.508353696665719`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888502, 3.908162682364491*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26666666666666, 
                    1.5083536921106542`}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888502, -1.8350654329424287`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-23.4, 
                    5.16415781897356}, {-0.25, 0}, 
                    Offset[8], {1., 1.0930068779493638`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.866666666666667`,
                     4.5083536925314185`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    6.334488489301293*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.86601219800849, 
                    7.115460143724453}, {-0.25, 0}, 
                    Offset[8], {0.1769924153879714, 0.05353201445532463}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.866666666666667`,
                     3.5083536925777565`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    5.229239263826457*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-22.4, 
                    5.749528781102289}, {-0.25, 0}, 
                    Offset[8], {1., 0.24694701824830645`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    6.017418574894329}, {-0.25, 0}, 
                    Offset[8], {1., 0.28185164415452757`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "4", "4"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.4, 
                    6.35707591085697}, {-0.25, 0}, 
                    Offset[8], {1., 0.378194463834717}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-27.4, 
                    20.62552263972458}, {-0.25, 0}, 
                    Offset[8], {1., -1.6768808563938364`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"1", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-26.4, 
                    19.955221273286554`}, {-0.25, 0}, 
                    Offset[8], {1., -1.117168944052196}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.266666666666666`,
                     22.508353698063303`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 8.490985692333197*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.266666666666666`,
                     23.508353698084587`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 
                    2.7711166694643907`*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.267638497345033`,
                     8.801353560396148}, {-0.25, 0}, 
                    Offset[8], {0.0877226920748484, 0.037629803777868176`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-25.48717082449457, 
                    17.969866169279534`}, {-0.25, 0}, 
                    Offset[8], {1., -2.9999999997462226`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.866666666666667`,
                     19.508353696439208`}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777807, 2.639914953306288*^-10}], 
                    
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.866666666666667`,
                     20.508353698087596`}, {-0.25, 0}, 
                    Offset[8], {0.1777777777777807, 
                    2.6783908424476977`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.885630196102525`,
                     9.589410878401276}, {-0.25, 0}, 
                    Offset[8], {0.1654771100355994, 0.052577632210862646`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-24.487170824519104`,
                     14.969866169430086`}, {-0.25, 0}, 
                    Offset[8], {1., -3.000000000091033}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26666666666666, 
                    16.508353696534336`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888502, 5.988809448354004*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26666666666666, 
                    17.50835369601309}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888502, 1.617550537957868*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.26837459690789, 
                    10.51461900400355}, {-0.25, 0}, 
                    Offset[8], {0.08683937259941032, 0.007518370271839103}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-23.4, 
                    12.908353695892915`}, {-0.25, 0}, 
                    Offset[8], {1., -0.9999999998925091}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.866666666666667`,
                     13.508353696100935`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    9.969980396817846*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.866666666666667`,
                     14.508353696570165`}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    1.0388134796812665`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.866666666666667`,
                     11.508353695303452`}, {-0.25, 0}, 
                    Offset[8], {
                    0.17777777777777715`, -3.467626186193229*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-22.4, 
                    12.508353695503395`}, {-0.25, 0}, 
                    Offset[8], {1., -7.208598162833368*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-21.4, 
                    12.508353695042048`}, {-0.25, 0}, 
                    Offset[8], {1., -2.8833824217144866`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "4", "4"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-20.7, 
                    10.708353695365956`}, {-0.25, 0}, 
                    Offset[8], {1., -5.9999999985358565`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    6.50835369657208}, {-0.25, 0}, 
                    Offset[8], {1., 3.020375061169034*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    7.108353696432994}, {-0.25, 0}, 
                    Offset[8], {1., 1.00000000007023}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-19.4, 
                    5.908353696091218}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000004993979`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    5.508353695847854}, {-0.25, 0}, 
                    Offset[8], {1., -7.267431101354305*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    5.508353694555513}, {-0.25, 0}, 
                    Offset[8], {1., -2.1054518128948985`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-16.4, 
                    5.508353695149845}, {-0.25, 0}, 
                    Offset[8], {1., 2.3941879589983728`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-15.4, 
                    5.508353696322098}, {-0.25, 0}, 
                    Offset[8], {1., 3.576303697627736*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"96\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"96", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    5.508353696336673}, {-0.25, 0}, 
                    Offset[8], {1., -2.141291588486638*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    5.508353696285367}, {-0.25, 0}, 
                    Offset[8], {1., 5.724132279283367*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     5.5083536962940745`}, {-0.25, 0}, 
                    Offset[8], {1., -2.3646862246096134`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    5.508353696246503}, {-0.25, 0}, 
                    Offset[8], {1., -6.352252057695296*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"48\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"48", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    5.508353696180372}, {-0.25, 0}, 
                    Offset[8], {1., -6.787104211980477*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    5.5083536963004756`}, {-0.25, 0}, 
                    Offset[8], {1., 2.454214609315386*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    5.50835369634699}, {-0.25, 0}, 
                    Offset[8], {1., -8.608935786469374*^-11}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    5.5083536963948525`}, {-0.25, 0}, 
                    Offset[8], {1., 1.3716228153271004`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"24\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"24", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    5.508353696419192}, {-0.25, 0}, 
                    Offset[8], {1., -5.0874859880423173`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    5.508353696443606}, {-0.25, 0}, 
                    Offset[8], {1., 7.460698725481052*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.3999999999999995`,
                     5.508353696444203}, {-0.25, 0}, 
                    Offset[8], {
                    1.0000000000000004`, -4.874323167314287*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.3999999999999995`,
                     5.5083536963869335`}, {-0.25, 0}, 
                    Offset[8], {1., -6.295408638834488*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"12\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"12", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.3999999999999995`,
                     5.50835369636523}, {-0.25, 0}, 
                    Offset[8], {1., 5.7980287238024175`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.3999999999999995`,
                     5.508353696367754}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 3.410605131648481*^-13}], 
                    
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999997, 
                    5.508353696367124}, {-0.25, 0}, 
                    Offset[8], {1., -1.2789769243681803`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"1", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    6.508353696293888}, {-0.25, 0}, 
                    Offset[8], {1., -6.65011157252593*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    6.508353695659247}, {-0.25, 0}, 
                    Offset[8], {1., -6.143920927570434*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-16.4, 
                    6.508353695912138}, {-0.25, 0}, 
                    Offset[8], {1., 8.310792054544436*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-15.4, 
                    6.508353696542043}, {-0.25, 0}, 
                    Offset[8], {1., 4.957882993039675*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"96\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"96", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    6.50835369670383}, {-0.25, 0}, 
                    Offset[8], {1., -6.087930159992538*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    6.508353696692968}, {-0.25, 0}, 
                    Offset[8], {1., 2.248157215944957*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.399999999999999`,
                     6.508353696817887}, {-0.25, 0}, 
                    Offset[8], {1., 1.9321078070788644`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.4, 
                    6.508353696801601}, {-0.25, 0}, 
                    Offset[8], {1., -1.559499196446268*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"48\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"48", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.4, 
                    6.50835369666915}, {-0.25, 0}, 
                    Offset[8], {1., -1.1678480404953007`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    6.50835369675649}, {-0.25, 0}, 
                    Offset[8], {1., 2.234230578324059*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.4, 
                    6.508353696766393}, {-0.25, 0}, 
                    Offset[8], {1., -1.3244516594568267`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    6.50835369670591}, {-0.25, 0}, 
                    Offset[8], {1., -1.2506440327797463`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"24\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"24", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    6.508353696734946}, {-0.25, 0}, 
                    Offset[8], {1., 5.67297320230864*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4, 
                    6.508353696801021}, {-0.25, 0}, 
                    Offset[8], {1., 7.23048287909478*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.3999999999999995`,
                     6.508353696882057}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000004`, 8.685674401931465*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.3999999999999995`,
                     6.508353696870347}, {-0.25, 0}, 
                    Offset[8], {1., -7.742073648842052*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"12\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"12", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.3999999999999995`,
                     6.508353696828653}, {-0.25, 0}, 
                    Offset[8], {1., -1.787725523172412*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.3999999999999995`,
                     6.508353696831852}, {-0.25, 0}, 
                    Offset[8], {1., 1.7251977624255233`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.39999999999999963`, 
                    6.508353696836162}, {-0.25, 0}, 
                    Offset[8], {1., -4.320099833421409*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"1", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-18.4, 
                    7.508353696580048}, {-0.25, 0}, 
                    Offset[8], {1., 1.9826984498649836`*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"128\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"128", "8", "8"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-17.4, 
                    7.508353697203843}, {-0.25, 0}, 
                    Offset[8], {1., 9.074767604033696*^-10}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-16.4, 
                    8.108353697513817}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999116378}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-15.4, 
                    8.508353699574203}, {-0.25, 0}, 
                    Offset[8], {1., 3.4928859804495005`*^-9}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"96\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"96", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-14.4, 
                    8.508353700993286}, {-0.25, 0}, 
                    Offset[8], {1., 3.6548541970660153`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"64\"", "\"16\"", "\"16\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"64", "16", "16"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-13.4, 
                    8.508353701000454}, {-0.25, 0}, 
                    Offset[8], {1., -1.2420287021086551`*^-11}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-12.7, 
                    10.719803126769524`}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000018`, 7.3714980859134585`}], 
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.399999999999999`,
                     16.140355820061195`}, {-0.25, 0}, 
                    Offset[8], {1., 0.43417338858708376`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"48\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"48", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.399999999999999`,
                     16.57601005486593}, {-0.25, 0}, 
                    Offset[8], {1., 0.4366414656165034}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"32\"", "\"32\"", "\"32\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"32", "32", "32"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.399999999999999, 
                    17.0559762816062}, {-0.25, 0}, 
                    Offset[8], {1., 0.5088494008227826}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.399999999999999, 
                    18.231154554343277`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999991, 1.6193975206799394`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"64\"", "\"64\""}, 
                    "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"8", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.399999999999999, 
                    19.11413624924932}, {-0.25, 0}, 
                    Offset[8], {1., 0.39203781105678104`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"24\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"24", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.399999999999999, 
                    19.533117949664366`}, {-0.25, 0}, 
                    Offset[8], {1., 0.4369442933205505}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"16\"", "\"64\"", "\"64\""},
                     "RowWithSeparators"], TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    Row[{"16", "64", "64"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.3999999999999995`,
                     20.02415914999877}, {-0.25, 0}, 
                    Offset[8], {1., 0.5271058050103079}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.399999999999999, 
                    20.999012808281698`}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000004`, 1.2733522271313404`}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.3999999999999986`,
                     21.508353699128875`}, {-0.25, 0}, 
                    Offset[8], {1., -8.924416761146858*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"12\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"12", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.3999999999999986`,
                     21.50835369912879}, {-0.25, 0}, 
                    Offset[8], {1., 5.7980287238024175`*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8\"", "\"128\"", 
                    "\"128\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"8", "128", "128"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.3999999999999986`,
                     21.508353699133817`}, {-0.25, 0}, 
                    Offset[8], {1., 4.519051799434237*^-12}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"4\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"4", "256", "256"}, "\[Cross]"], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999987, 
                    21.508353699136173`}, {-0.25, 0}, 
                    Offset[8], {1., 9.094947017729282*^-13}], 
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"256\"", 
                    "\"256\""}, "RowWithSeparators"], TooltipStyle -> 
                    "TextStyling"], Annotation[#, 
                    Row[{"1", "256", "256"}, "\[Cross]"], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-28., 1.7145055188062944`*^-15}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input1\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input1", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., 3.703514066099527*^-11}], 
                    Offset[{12, 12}, {-27., 3.703514066099527*^-11}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-27., 3.703514066099527*^-11}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_01a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_01a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., 0.5083536924467482}], 
                    Offset[{12, 12}, {-26., 0.5083536924467482}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-26., 0.5083536924467482}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_02a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_02a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-3.9999999999999996`, 
                    6.508353696916799}], 
                    
                    Offset[{10, 10}, {-3.9999999999999996`, 
                    6.508353696916799}]]}, 
                    InsetBox["\"C\"", 
                    
                    Offset[{0, -1}, {-3.9999999999999996`, 
                    6.508353696916799}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_1x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_1x", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{4, 128, 128}, {4, 128, 128}, {4, 128, 
                    128}}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-3.9999999999999987`, 
                    21.508353699134233`}], 
                    
                    Offset[{10, 10}, {-3.9999999999999987`, 
                    21.508353699134233`}]]}, 
                    InsetBox["\"C\"", 
                    
                    Offset[{0, -1}, {-3.9999999999999987`, 
                    21.508353699134233`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_1y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_1y", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{4, 128, 128}, {4, 128, 128}, {4, 128, 
                    128}}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-3.9999999999999996`, 
                    5.508353696424706}], 
                    
                    Offset[{10, 10}, {-3.9999999999999996`, 
                    5.508353696424706}]]}, 
                    InsetBox["\"C\"", 
                    
                    Offset[{0, -1}, {-3.9999999999999996`, 
                    5.508353696424706}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_1z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "128", ",", "128"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_1z", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{4, 128, 128}, {4, 128, 128}, {4, 128, 
                    128}}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-25., 2.5083536921542318`}], 
                    Offset[{12, 12}, {-25., 2.5083536921542318`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-25., 2.5083536921542318`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_03a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_03a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 6.508353696713415}], 
                    Offset[{10, 10}, {-8., 6.508353696713415}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-8., 6.508353696713415}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_2x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_2x", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{8, 64, 64}, {8, 64, 64}, {8, 64, 64}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-7.999999999999999, 
                    18.878913562615253`}], 
                    
                    Offset[{10, 10}, {-7.999999999999999, 
                    18.878913562615253`}]]}, 
                    InsetBox["\"C\"", 
                    
                    Offset[{0, -1}, {-7.999999999999999, 
                    18.878913562615253`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_2y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_2y", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{8, 64, 64}, {8, 64, 64}, {8, 64, 64}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 5.508353696312555}], 
                    Offset[{10, 10}, {-8., 5.508353696312555}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-8., 5.508353696312555}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_2z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "64", ",", "64"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_2z", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{8, 64, 64}, {8, 64, 64}, {8, 64, 64}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-24., 4.508353692203942}], 
                    Offset[{12, 12}, {-24., 4.508353692203942}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-24., 4.508353692203942}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_04a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_04a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-12., 6.508353696895171}], 
                    Offset[{10, 10}, {-12., 6.508353696895171}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-12., 6.508353696895171}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_3x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_3x", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{16, 32, 32}, {16, 32, 32}, {16, 32, 32}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-11.999999999999998`, 
                    15.879851786908944`}], 
                    
                    Offset[{10, 10}, {-11.999999999999998`, 
                    15.879851786908944`}]]}, 
                    InsetBox["\"C\"", 
                    
                    Offset[{0, -1}, {-11.999999999999998`, 
                    15.879851786908944`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_3y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_3y", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{16, 32, 32}, {16, 32, 32}, {16, 32, 32}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-12., 5.508353696284616}], 
                    Offset[{10, 10}, {-12., 5.508353696284616}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-12., 5.508353696284616}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_3z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "32", ",", "32"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_3z", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{16, 32, 32}, {16, 32, 32}, {16, 32, 32}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-23., 5.601360570153306}], 
                    Offset[{12, 12}, {-23., 5.601360570153306}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-23., 5.601360570153306}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_05a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_05a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., 6.50835369624457}], 
                    Offset[{10, 10}, {-16., 6.50835369624457}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-16., 6.50835369624457}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_4x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_4x", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{32, 16, 16}, {32, 16, 16}, {32, 16, 16}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., 8.508353697478471}], 
                    Offset[{10, 10}, {-16., 8.508353697478471}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-16., 8.508353697478471}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_4y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_4y", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{32, 16, 16}, {32, 16, 16}, {32, 16, 16}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-16., 5.508353696107521}], 
                    Offset[{10, 10}, {-16., 5.508353696107521}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-16., 5.508353696107521}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H_4z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"32", ",", "16", ",", "16"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H_4z", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer[
                    "Inputs" -> {{32, 16, 16}, {32, 16, 16}, {32, 16, 16}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-22., 5.848307588401612}], 
                    Offset[{12, 12}, {-22., 5.848307588401612}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-22., 5.848307588401612}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_06a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_06a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., 6.13015923255614}], 
                    Offset[{12, 12}, {-21., 6.13015923255614}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-21., 6.13015923255614}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_06a\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_06a", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-20., 6.508353696390857}], 
                    Offset[{10, 10}, {-20., 6.508353696390857}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-20., 6.508353696390857}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"H\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"64", ",", "8", ",", "8"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"64", ",", "8", ",", "8"}], "}"}]}], "}"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["H", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer["Inputs" -> {{64, 8, 8}, {64, 8, 8}}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-28., 20.62552263973464}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input2\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input2", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-27., 20.62552263971787}], 
                    Offset[{12, 12}, {-27., 20.62552263971787}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-27., 20.62552263971787}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_01b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_01b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-26., 19.508353695665676`}], 
                    Offset[{12, 12}, {-26., 19.508353695665676`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-26., 19.508353695665676`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_02b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_02b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-25., 16.508353695919453`}], 
                    Offset[{12, 12}, {-25., 16.508353695919453`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-25., 16.508353695919453`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_03b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_03b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-24., 13.50835369582842}], 
                    Offset[{12, 12}, {-24., 13.50835369582842}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-24., 13.50835369582842}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_04b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_04b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-23., 12.508353695935911`}], 
                    Offset[{12, 12}, {-23., 12.508353695935911`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-23., 12.508353695935911`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_05b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_05b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-22., 12.508353695215051`}], 
                    Offset[{12, 12}, {-22., 12.508353695215051`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-22., 12.508353695215051`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Enc_06b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Enc_06b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-21., 12.508353694926713`}], 
                    Offset[{12, 12}, {-21., 12.508353694926713`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-21., 12.508353694926713`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_06b\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_06b", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 6.508353696692894}], 
                    Offset[{12, 12}, {-19., 6.508353696692894}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-19., 6.508353696692894}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_5x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_5x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 7.508353696461087}], 
                    Offset[{12, 12}, {-19., 7.508353696461087}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-19., 7.508353696461087}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_5y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_5y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-19., 5.508353695891459}], 
                    Offset[{12, 12}, {-19., 5.508353695891459}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-19., 5.508353695891459}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_5z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_5z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-18., 5.508353695818784}], 
                    Offset[{12, 12}, {-18., 5.508353695818784}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-18., 5.508353695818784}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_5z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_5z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-17., 5.508353693713333}], 
                    Offset[{12, 12}, {-17., 5.508353693713333}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-17., 5.508353693713333}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map4z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map4z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., 5.508353696465151}], 
                    Offset[{12, 12}, {-15., 5.508353696465151}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-15., 5.508353696465151}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_4z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_4z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 5.508353696251022}], 
                    Offset[{12, 12}, {-14., 5.508353696251022}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-14., 5.508353696251022}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_4z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_4z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 36), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 5.508353696308263}], 
                    Offset[{12, 12}, {-13., 5.508353696308263}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-13., 5.508353696308263}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map3z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map3z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 37), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., 5.508353696221094}], 
                    Offset[{12, 12}, {-11., 5.508353696221094}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-11., 5.508353696221094}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_3z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_3z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 38), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., 5.508353696153223}], 
                    Offset[{12, 12}, {-10., 5.508353696153223}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-10., 5.508353696153223}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_3z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_3z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 39), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., 5.508353696398644}], 
                    Offset[{12, 12}, {-9., 5.508353696398644}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-9., 5.508353696398644}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map2z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map2z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 40), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 5.508353696449717}], 
                    Offset[{12, 12}, {-7., 5.508353696449717}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-7., 5.508353696449717}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_2z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_2z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 41), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., 5.508353696398842}], 
                    Offset[{12, 12}, {-6., 5.508353696398842}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-6., 5.508353696398842}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_2z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_2z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 42), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., 5.508353696473449}], 
                    Offset[{12, 12}, {-5., 5.508353696473449}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-5., 5.508353696473449}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map1z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map1z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 43), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-2.9999999999999996`, 
                    5.508353696361752}], 
                    
                    Offset[{12, 12}, {-2.9999999999999996`, 
                    5.508353696361752}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-2.9999999999999996`, 5.508353696361752}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_1z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_1z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 44), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.9999999999999996`, 
                    5.50835369636755}], 
                    
                    Offset[{12, 12}, {-1.9999999999999996`, 
                    5.50835369636755}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-1.9999999999999996`, 5.50835369636755}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_1z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_1z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 45), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-0.9999999999999997, 
                    5.508353696367891}], 
                    
                    Offset[{12, 12}, {-0.9999999999999997, 
                    5.508353696367891}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-0.9999999999999997, 5.508353696367891}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map0z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map0z", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 46), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{3.3728938614134315`*^-16, 5.508353696366612}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output3\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output3", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 47), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-18., 6.508353696027883}], 
                    Offset[{12, 12}, {-18., 6.508353696027883}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-18., 6.508353696027883}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_5x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_5x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 48), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-17., 6.508353695413491}], 
                    Offset[{12, 12}, {-17., 6.508353695413491}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-17., 6.508353695413491}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map4x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map4x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 49), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., 6.508353696740358}], 
                    Offset[{12, 12}, {-15., 6.508353696740358}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-15., 6.508353696740358}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_4x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_4x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 50), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 6.508353696679479}], 
                    Offset[{12, 12}, {-14., 6.508353696679479}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-14., 6.508353696679479}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_4x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_4x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 51), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 6.508353696701961}], 
                    Offset[{12, 12}, {-13., 6.508353696701961}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-13., 6.508353696701961}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map3x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map3x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 52), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., 6.5083536967392215`}], 
                    Offset[{12, 12}, {-11., 6.5083536967392215`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-11., 6.5083536967392215`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_3x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_3x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 53), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., 6.508353696622437}], 
                    Offset[{12, 12}, {-10., 6.508353696622437}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-10., 6.508353696622437}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_3x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_3x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 54), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., 6.50835369684586}], 
                    Offset[{12, 12}, {-9., 6.50835369684586}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-9., 6.50835369684586}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map2x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map2x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 55), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 6.508353696700908}], 
                    Offset[{12, 12}, {-7., 6.508353696700908}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-7., 6.508353696700908}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_2x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_2x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 56), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., 6.508353696757638}], 
                    Offset[{12, 12}, {-6., 6.508353696757638}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-6., 6.508353696757638}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_2x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_2x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 57), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., 6.508353696829943}], 
                    Offset[{12, 12}, {-5., 6.508353696829943}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-5., 6.508353696829943}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map1x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map1x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 58), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-2.9999999999999996`, 
                    6.508353696839379}], 
                    
                    Offset[{12, 12}, {-2.9999999999999996`, 
                    6.508353696839379}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-2.9999999999999996`, 6.508353696839379}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_1x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_1x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 59), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.9999999999999996`, 
                    6.508353696821501}], 
                    
                    Offset[{12, 12}, {-1.9999999999999996`, 
                    6.508353696821501}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-1.9999999999999996`, 6.508353696821501}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_1x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_1x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 60), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-0.9999999999999996, 
                    6.508353696838753}], 
                    
                    Offset[{12, 12}, {-0.9999999999999996, 
                    6.508353696838753}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-0.9999999999999996, 6.508353696838753}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map0x\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map0x", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 61), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{3.985217261273566*^-16, 6.508353696834433}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output1\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output1", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 62), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-18., 7.5083536966593565`}], 
                    Offset[{12, 12}, {-18., 7.5083536966593565`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-18., 7.5083536966593565`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_5y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_5y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 63), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-17., 7.508353697566833}], 
                    Offset[{12, 12}, {-17., 7.508353697566833}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-17., 7.508353697566833}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map4y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map4y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 64), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., 8.508353700971357}], 
                    Offset[{12, 12}, {-15., 8.508353700971357}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-15., 8.508353700971357}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_4y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_4y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 65), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., 8.508353701007906}], 
                    Offset[{12, 12}, {-14., 8.508353701007906}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-14., 8.508353701007906}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_4y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_4y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 66), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., 8.508353700995485}], 
                    Offset[{12, 12}, {-13., 8.508353700995485}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-13., 8.508353700995485}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map3y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map3y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 67), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-10.999999999999998`, 
                    16.314025175496027`}], 
                    
                    Offset[{12, 12}, {-10.999999999999998`, 
                    16.314025175496027`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-10.999999999999998`, 16.314025175496027`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_3y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_3y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 68), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-9.999999999999998, 
                    16.75066664111253}], 
                    
                    Offset[{12, 12}, {-9.999999999999998, 
                    16.75066664111253}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-9.999999999999998, 16.75066664111253}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_3y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_3y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 69), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-8.999999999999998, 
                    17.259516041935314`}], 
                    
                    Offset[{12, 12}, {-8.999999999999998, 
                    17.259516041935314`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-8.999999999999998, 17.259516041935314`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map2y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map2y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 70), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-6.999999999999999, 
                    19.270951373672034`}], 
                    
                    Offset[{12, 12}, {-6.999999999999999, 
                    19.270951373672034`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-6.999999999999999, 19.270951373672034`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_2y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_2y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 71), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-5.999999999999999, 
                    19.707895666992584`}], 
                    
                    Offset[{12, 12}, {-5.999999999999999, 
                    19.707895666992584`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-5.999999999999999, 19.707895666992584`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_2y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_2y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 72), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-4.999999999999999, 
                    20.235001472002892`}], 
                    
                    Offset[{12, 12}, {-4.999999999999999, 
                    20.235001472002892`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-4.999999999999999, 20.235001472002892`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map1y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map1y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 73), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-2.9999999999999987`, 
                    21.50835369912531}], 
                    
                    Offset[{12, 12}, {-2.9999999999999987`, 
                    21.50835369912531}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-2.9999999999999987`, 21.50835369912531}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Conv_1y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Conv_1y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 74), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.9999999999999987`, 
                    21.508353699131106`}], 
                    
                    Offset[{12, 12}, {-1.9999999999999987`, 
                    21.508353699131106`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-1.9999999999999987`, 21.508353699131106`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dec_1y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Dec_1y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 75), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-0.9999999999999987, 
                    21.508353699135625`}], 
                    
                    Offset[{12, 12}, {-0.9999999999999987, 
                    21.508353699135625`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.7], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.4], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, BaseStyle -> 
                    GrayLevel[0.4], ImageMargins -> 0., ImagePadding -> 0, 
                    ImageSize -> 16, PlotRange -> All, PlotRangePadding -> 
                    1], {-0.9999999999999987, 21.508353699135625`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Map0y\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Map0y", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 76), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.3170068256288346`*^-15, 21.508353699136535`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output2\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output2", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 77), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxV1F1IU2EYB/DNjFmIbjraclZOzW+X21z5caKzYbEbQcIgoq85zW7KgihK
ys0yIhFmmO2m2gGR6GYzKC0y/1uiwoqKLqIIc2F1E5kgXkRfp73nHJ8OHA6/
Ped59zzP+3LMLR2721JUKlWjeP97sotDuuB9G/s4yzHXo+0rAvX7J7cz1yGj
u3P5eMPcjj/JKxOoz/3Ql5bD/5Kcdv3lmYJuBy/HfdPZYnwdz/JrcfH1wLhJ
lyo5D85xYzKfvb8JvpPhc6qEbSX+Tkfya9DSEJ/tS8uSXALhvYnkFwP2pW+d
sS1K3HOI5m+Da3hUG2+XXQVnWJvMl61evLawK9Ws2N+cQfK3InZl4MndVoNk
B/zt3Gl3j1FyNQRbNlmPw+H+E3x+qJqX5/n9AnUdmsJRcV52ZT57p2Kiq5R+
/ZOXxHrKlfoTkR7RpUo9I11dxA4Iq88T26H2Gkk9drFeveiNip231pL+bBAO
riG2Imr7NLtiCzxn9SReASGuJS6DZ5rOuwhqN40Xwr8hkzgfiWZ6PnLhc9D1
jcAeGtdj7iaLs/3WIHQvK+nf7IeJvGfM7DwuTISeM8cHBw3zjWOcaibrv36d
y+lkPlaYj6YQWxC1ryeugLqEzrMMiavURYha6PuFMFcaiPMRXWUizgV/meaL
/XbRfD0wnkPOtwb8F2a531CQ+afUr2+eeV9v69Cx0cec71UOWc8G/wsD2X8r
hCPFxBYsLkbI+a9Ak2uEuAyqYmb295vhnrMteZuqJBdgZsoTKYdsM9yfI0Md
LqtkE9yPxnQHdtolGxB80D1cc192Nu48PZVRylVL+6dBTS/7nvyQ+g32My9J
/QYGmSvNmtrbD99wgRvMfwET07zc
                    "], 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 20, 20, 24, 20, 20, 20, 24, 20, 20, 
                    20, 24, 20, 20, 20, 24, 24, 20, 8, 24, 24, 24, 24, 24, 24,
                     24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 
                    24, 24, 24, 24, 8, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
                     24, 24, 24, 24, 8, 24, 24, 24, 24, 24, 24, 24, 24, 24, 
                    24, 24, 24, 24, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageSize -> {1036., 956.0000002148626}, PlotRangePadding -> 
                    0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], ImageSize -> {800, 500}, ImageSizeAction -> 
                    "Scrollable", ScrollPosition -> {252., 0.}, 
                    Scrollbars -> {True, True}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_01a"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_02a"], 
                    NeuralNetworks`NetPath["Nodes", "H_1x"], 
                    NeuralNetworks`NetPath["Nodes", "H_1y"], 
                    NeuralNetworks`NetPath["Nodes", "H_1z"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_03a"], 
                    NeuralNetworks`NetPath["Nodes", "H_2x"], 
                    NeuralNetworks`NetPath["Nodes", "H_2y"], 
                    NeuralNetworks`NetPath["Nodes", "H_2z"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_04a"], 
                    NeuralNetworks`NetPath["Nodes", "H_3x"], 
                    NeuralNetworks`NetPath["Nodes", "H_3y"], 
                    NeuralNetworks`NetPath["Nodes", "H_3z"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_05a"], 
                    NeuralNetworks`NetPath["Nodes", "H_4x"], 
                    NeuralNetworks`NetPath["Nodes", "H_4y"], 
                    NeuralNetworks`NetPath["Nodes", "H_4z"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_06a"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_06a"], 
                    NeuralNetworks`NetPath["Nodes", "H"], 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_01b"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_02b"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_03b"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_04b"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_05b"], 
                    NeuralNetworks`NetPath["Nodes", "Enc_06b"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_06b"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_5x"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_5y"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_5z"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_5z"], 
                    NeuralNetworks`NetPath["Nodes", "Map4z"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_4z"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_4z"], 
                    NeuralNetworks`NetPath["Nodes", "Map3z"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_3z"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_3z"], 
                    NeuralNetworks`NetPath["Nodes", "Map2z"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_2z"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_2z"], 
                    NeuralNetworks`NetPath["Nodes", "Map1z"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_1z"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_1z"], 
                    NeuralNetworks`NetPath["Nodes", "Map0z"], 
                    NeuralNetworks`NetPath["Outputs", "Output3"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_5x"], 
                    NeuralNetworks`NetPath["Nodes", "Map4x"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_4x"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_4x"], 
                    NeuralNetworks`NetPath["Nodes", "Map3x"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_3x"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_3x"], 
                    NeuralNetworks`NetPath["Nodes", "Map2x"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_2x"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_2x"], 
                    NeuralNetworks`NetPath["Nodes", "Map1x"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_1x"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_1x"], 
                    NeuralNetworks`NetPath["Nodes", "Map0x"], 
                    NeuralNetworks`NetPath["Outputs", "Output1"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_5y"], 
                    NeuralNetworks`NetPath["Nodes", "Map4y"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_4y"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_4y"], 
                    NeuralNetworks`NetPath["Nodes", "Map3y"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_3y"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_3y"], 
                    NeuralNetworks`NetPath["Nodes", "Map2y"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_2y"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_2y"], 
                    NeuralNetworks`NetPath["Nodes", "Map1y"], 
                    NeuralNetworks`NetPath["Nodes", "Conv_1y"], 
                    NeuralNetworks`NetPath["Nodes", "Dec_1y"], 
                    NeuralNetworks`NetPath["Nodes", "Map0y"], 
                    NeuralNetworks`NetPath["Outputs", "Output2"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input1" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {256, 256}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"], "Input2" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {256, 256}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], 
                    Association[
                    "Output1" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT], "Output2" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT], "Output3" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Enc_01a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{4, 1, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 4, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {256, 256}, "$WeightsInputChannels" -> 
                    1], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 4, 
                    "$SpatialDimensions" -> {256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {128, 128}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "Enc_02a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 4, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 8, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    4], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {64, 64}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "Enc_03a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 8, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 8, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}, "$WeightsInputChannels" -> 8], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {32, 32}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "Enc_04a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {32, 32}, "$WeightsInputChannels" -> 16],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 32, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {16, 16}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "Enc_05a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {16, 16}, 
                    "$OutputSize" -> {16, 16}, "$WeightsInputChannels" -> 32],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {16, 16}, 
                    "$OutputSize" -> {8, 8}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "Enc_06a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]]], "Dec_06a" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 128, 
                    "$InputSize" -> {4, 4}, "$OutputSize" -> {8, 8}, 
                    "$WeightsOutputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "Enc_01b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{4, 1, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 4, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {256, 256}, "$WeightsInputChannels" -> 
                    1], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 4, 
                    "$SpatialDimensions" -> {256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {128, 128}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "Enc_02b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 4, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 8, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    4], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {64, 64}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "Enc_03b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 8, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 16, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 8, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}, "$WeightsInputChannels" -> 8], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {32, 32}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "Enc_04b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 32, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {32, 32}, "$WeightsInputChannels" -> 16],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 32, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {16, 16}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "Enc_05b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 32, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 32, "$InputSize" -> {16, 16}, 
                    "$OutputSize" -> {16, 16}, "$WeightsInputChannels" -> 32],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {16, 16}, 
                    "$OutputSize" -> {8, 8}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "Enc_06b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]]], "Dec_06b" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 128, 
                    "$InputSize" -> {4, 4}, "$OutputSize" -> {8, 8}, 
                    "$WeightsOutputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "H" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "Conv_5z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "Dec_5z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {16, 16}, 
                    "$WeightsOutputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Map4z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 64, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {32, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "H_4z" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]]], "Conv_4z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 96, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 96, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 96], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Dec_4z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 32, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {32, 32}, 
                    "$WeightsOutputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Map3z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {16, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "H_3z" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]]], "Conv_3z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 48], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Dec_3z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {64, 64}, 
                    "$WeightsOutputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Map2z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 16, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}, "$WeightsInputChannels" -> 16],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {8, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "H_2z" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]]], "Conv_2z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 24, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 24, 
                    "$InputSize" -> {64, 64}, "$OutputSize" -> {64, 64}, 
                    "$WeightsInputChannels" -> 24], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Dec_2z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 8, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {128, 128}, "$WeightsOutputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Map1z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{4, 8, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {4, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "H_1z" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]]], "Conv_1z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 12, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 12, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    12], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Dec_1z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 4, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {256, 256}, "$WeightsOutputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 4, 
                    "$SpatialDimensions" -> {256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "Map0z" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1, 4, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 1, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {256, 256}, "$WeightsInputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {1, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]], "Conv_5x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "Dec_5x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {16, 16}, 
                    "$WeightsOutputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Map4x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 64, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {32, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "H_4x" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]]], "Conv_4x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 96, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 96, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 96], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Dec_4x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 32, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {32, 32}, 
                    "$WeightsOutputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Map3x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {16, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "H_3x" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]]], "Conv_3x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 48], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Dec_3x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {64, 64}, 
                    "$WeightsOutputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Map2x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 16, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}, "$WeightsInputChannels" -> 16],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {8, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "H_2x" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]]], "Conv_2x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 24, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 24, 
                    "$InputSize" -> {64, 64}, "$OutputSize" -> {64, 64}, 
                    "$WeightsInputChannels" -> 24], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Dec_2x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 8, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {128, 128}, "$WeightsOutputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Map1x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{4, 8, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {4, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "H_1x" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]]], "Conv_1x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 12, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 12, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    12], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Dec_1x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 4, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {256, 256}, "$WeightsOutputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 4, 
                    "$SpatialDimensions" -> {256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "Map0x" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1, 4, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 1, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {256, 256}, "$WeightsInputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {1, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]], "Conv_5y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {8, 8}, 
                    "$WeightsInputChannels" -> 128], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 128, 
                    "$SpatialDimensions" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]]], "Dec_5y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 128, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {16, 16}, 
                    "$WeightsOutputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Map4y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 64, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 64], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {32, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]]], "H_4y" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{32, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]]], "Conv_4y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 96, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 96, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {16, 16}, 
                    "$WeightsInputChannels" -> 96], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 64, 
                    "$SpatialDimensions" -> {16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 16, 16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]]], "Dec_4y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{64, 32, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 64, 
                    "$InputSize" -> {16, 16}, "$OutputSize" -> {32, 32}, 
                    "$WeightsOutputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 16, 16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Map3y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 32, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 32], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {16, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]]], "H_3y" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{16, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]]], "Conv_3y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 48, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 32, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {32, 32}, 
                    "$WeightsInputChannels" -> 48], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 32, 
                    "$SpatialDimensions" -> {32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 32, 32}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]]], "Dec_3y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{32, 16, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "ChannelGroups" -> 1, 
                    "$Dilation" -> {1, 1}, "$InputChannels" -> 32, 
                    "$InputSize" -> {32, 32}, "$OutputSize" -> {64, 64}, 
                    "$WeightsOutputChannels" -> 16], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Map2y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 16, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}, "$WeightsInputChannels" -> 16],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {8, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]]], "H_2y" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8, 64, 64}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{8, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]]], "Conv_2y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 24, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 16, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{2, 2}, {2, 2}}, "Dilation" -> {1, 1}, 
                    "ChannelGroups" -> 1, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 24, 
                    "$InputSize" -> {64, 64}, "$OutputSize" -> {64, 64}, 
                    "$WeightsInputChannels" -> 24], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 64, 64}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{24, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "Dec_2y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{16, 8, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 16, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {128, 128}, "$WeightsOutputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Map1y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{4, 8, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    8], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {4, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]]], "H_1y" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{4, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]]], "Conv_1y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 12, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 8, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 12, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}, "$WeightsInputChannels" -> 
                    12], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 8, 
                    "$SpatialDimensions" -> {128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {8, 128, 128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{12, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]]], "Dec_1y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{8, 4, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 4, "KernelSize" -> {2, 2},
                     "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "ChannelGroups" -> 1, "$Dilation" -> {1, 1}, 
                    "$InputChannels" -> 8, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {256, 256}, "$WeightsOutputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "MovingMean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 4, 
                    "$SpatialDimensions" -> {256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]]], "Map0y" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`TensorT[{1, 4, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 1, "KernelSize" -> {5, 5},
                     "Stride" -> {1, 1}, "PaddingSize" -> {{2, 2}, {2, 2}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {256, 256}, 
                    "$OutputSize" -> {256, 256}, "$WeightsInputChannels" -> 
                    4], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {1, 256, 256}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 256, 256}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 256, 256}, 
                    NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input1\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output1\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"256\"", "\"256\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input2\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output2\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"256\"", "\"256\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output3\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"256\"", "\"256\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {252., {40.5, 46.5}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.776129627374197*^9, {3.776129685741547*^9, 3.776129796216208*^9}, 
   3.7761300293440847`*^9, 3.7761300663072577`*^9, {3.7761301185796747`*^9, 
   3.776130134138335*^9}, {3.7761304652957983`*^9, 3.776130485957487*^9}, 
   3.776130564670309*^9, 3.77613079201447*^9, 3.776130903357086*^9, {
   3.776131147234415*^9, 3.77613115974899*^9}, 3.7761312044559317`*^9, 
   3.776131255942268*^9, 3.776138994364615*^9, {3.776139263477722*^9, 
   3.776139292717567*^9}, {3.7765516277949944`*^9, 3.776551653824913*^9}, {
   3.7765516876941967`*^9, 3.7765517049306517`*^9}, {3.77655174206217*^9, 
   3.776551757881671*^9}, 3.776551934921453*^9, 3.776552192036475*^9, {
   3.776552238775104*^9, 3.7765522709939528`*^9}, 3.776552503897979*^9, 
   3.776553008593464*^9, 3.776553077205153*^9, 3.7765531272700033`*^9, 
   3.7765532699772043`*^9, 3.776553403725183*^9, 3.776553480523613*^9, 
   3.7765535409010572`*^9, 3.776553575762188*^9, {3.776553698468389*^9, 
   3.776553715624164*^9}, 3.776554830662937*^9, 3.776556779652445*^9, 
   3.7765571921635017`*^9, 3.776557295816133*^9, 3.7765573729144373`*^9, {
   3.7765574174994698`*^9, 3.7765574367814083`*^9}, 3.7765591970991707`*^9, 
   3.776559248916601*^9, 3.776559289680901*^9, 3.7765615649753857`*^9, 
   3.7765629675863523`*^9, {3.776567670098236*^9, 3.776567693597443*^9}, 
   3.776569567534663*^9, 3.776569606944818*^9, 3.7766336363596992`*^9, 
   3.776635009180451*^9, 3.776635084981763*^9, 3.776636109756391*^9, 
   3.777156175401227*^9, 3.777163611167872*^9, 3.777163684136631*^9, 
   3.777163912848586*^9, 3.7771704147459307`*^9, 3.7771705255275183`*^9, 
   3.7771706065738897`*^9, 3.77717065369697*^9, {3.7771717267390747`*^9, 
   3.777171744551379*^9}, 3.7771718531605587`*^9, 3.7771718966687803`*^9, {
   3.777171956933106*^9, 3.777171970000119*^9}, 3.777172810711749*^9, 
   3.777248644924754*^9, 3.7772487898370333`*^9, 3.777322851905841*^9, 
   3.7773228893180733`*^9, 3.777323346575239*^9, 3.777324294147354*^9, 
   3.7796788362801847`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"0c03de65-a2e3-4edd-b42c-283729ada2b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NetInitialize", "[", "CondNET", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7488334358191*^9, 3.748833437143956*^9}, {
   3.748836624193375*^9, 3.7488366307477493`*^9}, {3.748844140948924*^9, 
   3.748844155863429*^9}, 3.7489237385311403`*^9, 3.748925836857183*^9, {
   3.748927760279793*^9, 3.748927831409721*^9}, {3.748928127694168*^9, 
   3.748928128217163*^9}, 3.748930643823868*^9, 3.7489312214148817`*^9, {
   3.748931640423674*^9, 3.748931643540572*^9}, {3.748931847989997*^9, 
   3.7489318508513727`*^9}, 3.74918088688128*^9, {3.749242447054514*^9, 
   3.7492424525418463`*^9}, {3.749247635961995*^9, 3.749247642454769*^9}, {
   3.7518715542312202`*^9, 3.751871559891494*^9}, 3.751871602725398*^9, {
   3.75187176866298*^9, 3.751871771764677*^9}, {3.753411561283554*^9, 
   3.753411562953158*^9}, {3.7534982271956778`*^9, 3.753498227722473*^9}, {
   3.755908409614769*^9, 3.755908411299943*^9}, 3.755912742411437*^9, 
   3.761603427996481*^9, 3.7616038921793947`*^9, {3.771638688386777*^9, 
   3.771638688914114*^9}, {3.775192553938657*^9, 3.775192555681438*^9}, {
   3.7771544079597282`*^9, 3.777154408567573*^9}, {3.779682138507337*^9, 
   3.779682138750428*^9}, {3.792459001721863*^9, 
   3.792459001910472*^9}},ExpressionUUID->"187891cb-8095-4af9-8080-\
4e24c167e334"]
},
WindowSize->{1389, 759},
WindowMargins->{{Automatic, 160}, {47, Automatic}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 252, 5, 28, "Input",ExpressionUUID->"fae7aca7-189c-4b34-b5c8-8771215b509d"],
Cell[835, 29, 1076, 17, 22, "Print",ExpressionUUID->"9d3e001e-3305-46d0-9d35-5bd241f70824"]
}, Open  ]],
Cell[1926, 49, 1171, 24, 105, "Input",ExpressionUUID->"3907ebcd-c760-4b15-870d-8cc5d4eb2f87"],
Cell[3100, 75, 1238, 27, 86, "Input",ExpressionUUID->"ae471433-d010-4b89-bf2f-be445a1a8f96"],
Cell[4341, 104, 1610, 33, 124, "Input",ExpressionUUID->"304c9253-0741-41e3-a604-db767177dedb"],
Cell[5954, 139, 942, 19, 86, "Input",ExpressionUUID->"58cf3314-f808-40cc-97e3-6543dcfb2af0"],
Cell[6899, 160, 1164, 38, 28, "Input",ExpressionUUID->"dd62b4e1-f218-47fa-96a9-40df10966e96"],
Cell[8066, 200, 981, 22, 28, "Input",ExpressionUUID->"598362fb-2818-48e5-9a08-a8e149030eef"],
Cell[9050, 224, 1046, 21, 28, "Input",ExpressionUUID->"33ac2309-75a9-4ac8-abc2-471d02bf7775"],
Cell[10099, 247, 1389, 44, 28, "Input",ExpressionUUID->"d61806f1-1461-48cf-9828-affeff2ed9d7"],
Cell[CellGroupData[{
Cell[11513, 295, 30942, 571, 2499, "Input",ExpressionUUID->"1fdca5cd-47bc-47f4-88be-64fe5c436b6b"],
Cell[42458, 868, 757041, 14691, 636, "Output",ExpressionUUID->"0c03de65-a2e3-4edd-b42c-283729ada2b0"]
}, Open  ]],
Cell[799514, 15562, 1317, 20, 28, "Input",ExpressionUUID->"187891cb-8095-4af9-8080-4e24c167e334"]
}
]
*)

